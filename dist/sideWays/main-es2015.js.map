{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/complete/complete.component.ts","./src/app/complete/complete.component.html","./src/app/dashboard-left/dashboard-left.component.ts","./src/app/dashboard-right/dashboard-right.component.ts","./src/app/dashboard-right/dashboard-right.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/issue/issue.component.ts","./src/app/issue/issue.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/script/script.component.ts","./src/app/script/script.component.html","./src/app/upload.service.ts","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CompleteComponent } from './complete/complete.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UploadComponent } from './upload/upload.component';\n\n\nconst routes: Routes = [\n  { path: 'download', component: DashboardComponent},\n  { path: 'complete', component: CompleteComponent},\n  { path: '', component: UploadComponent},\n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sideWays';\n}\n","<app-nav></app-nav>\n\n","import { Observable } from 'rxjs';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DashboardLeftComponent } from './dashboard-left/dashboard-left.component';\nimport { DashboardRightComponent } from './dashboard-right/dashboard-right.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ScriptComponent } from './script/script.component'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { FormsModule } from '@angular/forms';\nimport { CompleteComponent } from './complete/complete.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n    DashboardLeftComponent,\n    DashboardRightComponent,\n    DashboardComponent,\n    NavbarComponent,\n    NavComponent,\n    ScriptComponent,\n    CompleteComponent,\n    IssueComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    FormsModule,\n \n  ],\n  providers: [ \n    DatePipe],\n  entryComponents: [\n    IssueComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.component.html',\n  styleUrls: ['./complete.component.css']\n})\nexport class CompleteComponent implements OnInit {\nname:string = localStorage.getItem(\"name\")\n\n  constructor( public upload:UploadService) { }\n\n\n  ngOnInit(): void {\n\nthis.downloadPDF()\n \n  }\ndownloadPDF():void{\n\n    this.upload.getPDF(this.name).subscribe(data => {\n    var url = window.URL.createObjectURL(data);\n    window.open(url);\n})\n}\n}\n","<div>\n    <h1>Thanks for using Cheap Sides </h1>\n    <h3> we've got a lot more in the pipe so stay tuned</h3>\n</div>\n<div>\n    <button (click)=\"downloadPDF()\">Download PDF</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-left',\n  templateUrl: './dashboard-left.component.html',\n  styleUrls: ['./dashboard-left.component.css']\n})\nexport class DashboardLeftComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { IssueComponent } from './../issue/issue.component';\nimport { Router } from '@angular/router';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit, ViewChild, Inject} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SelectionModel } from \"@angular/cdk/collections\"\nimport { Subscription } from 'rxjs';\nimport { last, first } from 'rxjs/operators';\nimport text from 'body-parser/lib/types/text';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-dashboard-right',\n  templateUrl: './dashboard-right.component.html',\n  styleUrls: ['./dashboard-right.component.css']\n})\nexport class DashboardRightComponent implements OnInit {\n  displayedColumns: string[] = ['number', \"page number\", 'text', \"preview\", \"select\"];\n  dataSource: MatTableDataSource<any>;\n  dataReady: boolean = false;\n  initialSelection: any[] = [];\n  active: boolean = true\n  selected: any[]\n  pages: any[]\n  scriptProblems: any[]\n  scriptData;\n  date: number ;\n  scenes: any[]\n  textToTest: string[];\n  modalData:any[]\n  selectedOB: any\n  subscription: Subscription\n  script: string = localStorage.getItem(\"name\")\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  constructor(public upload: UploadService, public router: Router, public dialog: MatDialog, private datePipe: DatePipe) {\n\n  }\n\n  ngOnInit(): void {\n    this.date= Date.now()\n    this.selected = []\n    this.pages = []\n    this.active = true;\n    this.scriptProblems = []\n    this.modalData =[]\n    this.scriptData = this.upload.lineArr\n    this.scenes = this.scriptData.filter\n      (line => { return line.category === \"scene-header\" })\n    for (let i = 0; i < this.scenes.length; i++) {\n      if (this.scenes[i + 1]) {\n        let last = this.scenes[i + 1].index\n        this.scenes[i].lastLine = this.scriptData[this.scenes[i + 1].index - 1].index\n        this.scenes[i].lastPage = this.scriptData[this.scenes[i].lastLine].pageNumber\n        this.scenes[i].firstLine = this.scriptData[this.scenes[i].index - 1].index\n        this.scenes[i].preview = this.getPreview(i)\n      }\n      this.dataSource = new MatTableDataSource(this.scenes);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n    \n    this.scriptProblems = this.upload.issues\n    this.scriptProblems.forEach(line => {\n      line.text = this.lookBack(line)\n    })\n    this.dataReady=true;\n    let probsArr = []\n    this.scriptProblems.forEach(line =>{\n      let ind = line.index;\n      let scene = this.scriptData[ind].sceneIndex;\n      let problem = this.scenes.map((scene) => scene.sceneIndex).indexOf(scene)\n      // MAP OVER THIS AN FLAG SCENES IF THEY HAVE  PROBLEM LOINE\n      probsArr.push(problem)\n    \n      \n// filter through script problems and then go to scenes and add problem flags for each index at proper location\n    })\n    probsArr = [...new Set(probsArr)]\n\n   for (let i=0; i< probsArr.length; i++){\n     this.scenes[probsArr[i]].problems = this.scriptProblems.filter(line => line.sceneNumber === probsArr[i]);\n}\n   console.log(this.scenes)\n   console.log(this.scriptProblems)\n   console.log(this.scriptData)\n  }\n\n  \n  // lets get lookback tighter  - should be able to refrence lastCharacterIndex\n  lookBack(line) {\n    let newText = \"\"\n    newText=this.scriptData[line.lastCharIndex].text\n    let ind = line.index\n\n    for(let i=line.lastCharIndex+1; i<ind+1 ; i++){\n      newText = newText + \"\\n\" + this.scriptData[i].text;\n      if(this.scriptData[i].category ===(\"more\"||\"page-number\"||\"page-number-hidden\")||this.scriptData[i].subCategory === \"parenthetical\"){\n        // console.log(\"FOUND IT AHWJHWAKJEHAKWJH\")\n        // ind+=1\n      }\n   }\n return newText\n\n}\n  // create preview text for table\n  getPreview(ind) {\n    return this.scenes[ind].preview =\n      this.scriptData[this.scenes[ind].index + 1].text + \" \" +\n      this.scriptData[this.scenes[ind].index + 2].text\n  }\n  getPages(data) {\n    let num = data[data.length - 1].pageNumber\n    for (let i = 2; i < num + 1; i++) {\n      let page = data.filter(line => line.pageNumber === i)\n      this.pages.push(page);\n      if (i === num) {\n        this.dataReady = true\n      }\n    }\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  makeVisible(sceneArr, breaks) {\n    let merged = [].concat.apply([], sceneArr);\n    let counter = 0;\n    for (let i = 0; i < merged.length; i++) {\n        if (breaks[counter] && merged[i].index > breaks[counter].first && merged[i].index <= breaks[counter].last) {\n            merged[i].visible = \"true\";\n            if (merged[i].index === breaks[counter].last) {\n                console.log(\"increasing counter\");\n                counter += 1;\n            }\n        }\n        else if (!breaks[counter]) {\n            console.log(i);\n            break;\n        }\n    }\n    console.log(merged);\n    return merged;\n}\ngetPdf(sceneArr, name) {\n  sceneArr = this.sortByNum(sceneArr);\n  // need first and last lines from selected\n  let fullPages = [];\n  let used = [];\n  let pages = [];\n  let sceneBreaks = [];\n  sceneArr.forEach(scene => {\n      for (let i = scene.pageNumber; i <= scene.lastPage; i++) {\n          if (!pages.includes(i)) {\n              pages.push(i);\n          }\n      }\n      let breaks = {\n          first: scene.firstLine,\n          last: scene.lastLine,\n          scene: scene.sceneNumber,\n          firstPage: scene.pageNumber,\n      };\n      sceneBreaks.push(breaks);\n  });\n  pages.forEach(page => {\n      console.log(page);\n      let doc = this.scriptData.filter(scene => scene.pageNumber === page);\n      doc.push({ pageNumber: page });\n      fullPages.push(doc);\n      console.log(fullPages)\n  });\n \n  console.log(sceneBreaks)\n  let final = this.makeVisible(fullPages, sceneBreaks);\n  console.log(final);\n\n  this.upload.generatePdf(final, name).subscribe(data => {\n      this.router.navigate([\"complete\"]);\n  });\n}\n  sortByNum(array) {\n    return array.sort((a, b) => {\n      let x = a.sceneNumber;\n      let y = b.sceneNumber;\n\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n  logSelected(): void {\n    console.log(this.selected)\n    console.log(this.scriptData)\n    console.log(this.scenes)\n  }\n  makePages(scenes) {\n    let pageNums = scenes.map(scene => scene.pageNumber).sort((a, b) => a - b);\n    return pageNums\n\n  }\n  toggleSelected(event, scene) {\n    !this.selected.includes(scene) ?\n      this.selected.push(scene) :\n      this.selected.splice(this.selected.indexOf(scene, 1))\n    this.selected.length > 10 ?\n      this.active = false :\n      this.active = true\n  }\n  openDialog() {\n    this.modalData = this.scenes.filter( scene => {\n      return scene.problems\n    }).map( scene => scene = scene.problems).flat()\n    if(this.modalData){\n    for (let i=0; i<this.modalData.length;i++) {\n      console.log(this.modalData[i])\n      if(this.modalData[i].text){\n      this.modalData[i].text = this.modalData[i].text.split(/\\n/)\n    }\n    }\n    const dialogRef = this.dialog.open(IssueComponent, {\n      width:'500px',\n      data:{scenes: this.modalData, selected: this.selected}\n    });\n  \n  dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log(this.selected)\n      this.getPdf(this.selected, this.script)\n    });\n  } else this.getPdf(this.selected,this.script)\n    \n  }\n\n}\n\n\n\n","<div class=\"main-container\">\n  <!-- hidden buttons for development -->\n<!-- <button (click)=\"logSelected()\">log</button>\n<button (click)=\"makePages(selected)\">make pages</button> -->\n    <div class=\"controls-container\">\n       <h1> Project: {{script}}</h1>\n        <h2>{{date | date: 'shortDate' }} scenes:</h2>\n        <ul>\n            <li *ngFor =\"let scene of selected\"><pre>{{scene.sceneNumber}}     {{scene.text}}     {{scene.sceneNumber}}</pre></li>\n            \n        </ul>\n    \n        <div>\n        <button (click)=\"openDialog()\">getPDF</button>\n      </div>\n        \n        <mat-form-field style=\"width:100%\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          \n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n          \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Scene Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.sceneNumber}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"page number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Page Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.pageNumber}} </td>\n              </ng-container>\n          \n              <!-- Progress Column -->\n              <ng-container matColumnDef=\"text\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.text}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"preview\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Text </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.preview}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Select </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\">\n                    <input type=\"checkbox\" \n                    name ={{i+1}}\n               \n                    (change)=\"toggleSelected($event, scene)\" \n                    [attr.disabled] = \"active === false ? 'disabled' : null\"> </td>\n              </ng-container>\n          \n          \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          \n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n              </tr>\n            </table>\n          \n            <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\n          </div>\n  \n       \n\n    </div>\n\n</div>","import { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  $download:Observable<any>\n  constructor(public upload:UploadService, public router:Router) { }\n  file:string\n  data:any;\n  ngOnInit(): void {\n    this.file = localStorage.getItem(\"name\")\n    \n \n}\n  getSheet(){\n  \n  this.upload.getFile(this.file).subscribe(data =>{ \n\n    var url = window.URL.createObjectURL(data);\n        window.open(url);\n    this.router.navigate([\"\"])\n        }\n  )\n}\n      \n}\n\n\n","<div class=\"main\" >\n<div class=\"button-container\">\n  <!-- engage this to download data for watson. -->\n  <!-- <h1>Processing complete on :</h1>\n  <h3>{{file}}</h3>\n<button mat-button color=\"accent\" class=\"success\"(click)=\"getSheet()\">download spreadsheet</button>\n  </div> -->\n  <app-dashboard-left></app-dashboard-left>\n  <app-dashboard-right\n  ></app-dashboard-right>\n</div>\n","import { text } from 'body-parser/lib/types/text';\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\nexport class IssueComponent implements OnInit, AfterViewInit {\nscriptData: any[];\nproblems:any[];\nselected:any[];\nmodalProblems:any[]=[];\ncurrentProblem:any;\nproblemIndex:number=0\nlineInQuestion:string;\nmodalReady:boolean = false\n  constructor(public  upload:UploadService,     \n    public dialogRef: MatDialogRef<IssueComponent>,  \n    @Inject(MAT_DIALOG_DATA) public data:any) { }\n\n  ngOnInit(): void {\n    \n  }\n  ngAfterViewInit(): void {\n    \n    console.log(\"after firiing\")\n    this.scriptData = this.upload.lineArr\n    console.log(this.data)\n    this.problems = this.data.scenes\n    this.selected =this.data.selected\n    this.getProblems()\n    this.updateProblem()\n    console.log(this.currentProblem)\n    console.log(this.problems)\n    console.log(this.selected)\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    \n  }\n  getProblems(){\n    for(let i = 0; i < this.selected.length; i++){\n      let scenes = this.problems.filter(scene => scene.sceneNumber === this.selected[i].sceneIndex+1)\n       console.log(scenes)\n       scenes.forEach(scene =>{\n       scene.lineCSS =[];\n        for(let i = 0 ; i <scene.text.length; i++){\n           scene.lineCSS.push(this.scriptData[scene.lastCharIndex+i].category)\n        }\n       })\n       this.modalProblems.push(scenes)\n    }\n    this.modalProblems = this.modalProblems.flat()\n    this.modalReady=true\n    console.log(this.modalProblems)\n  }\n  updateProblem(){\n    this.currentProblem = this.modalProblems[this.problemIndex];\n    this.currentProblem.modalText= [];\n    for(let i=0;i<this.currentProblem.lineCSS.length;i++){\n   \n      this.currentProblem.modalText.push({\n        text:this.currentProblem.text[i],\n        css:this.currentProblem.lineCSS[i]\n      })\n   }\n   this.currentProblem.finalText ={\n    css:this.currentProblem.modalText[this.currentProblem.modalText.length-1].css + \" last-line\",\n    text:this.currentProblem.modalText[this.currentProblem.modalText.length-1].text\n   }\n\n  this.currentProblem.modalText.pop()\n    \n    console.log(this.currentProblem)\n  }\n  iterateProblem(){\n    console.log(this.problemIndex, this.modalProblems.length)\n    if(this.problemIndex+1 < this.modalProblems.length){\n    this.problemIndex+=1;\n    this.updateProblem()\n    }else \n    this.dialogRef.close()\n  }\n  updateScriptDoc(index, str){\n   \n    this.upload.lineArr[index].category=str;\n    this.iterateProblem()\n  }\n  getClass(str){\n    return str\n}\n\n}\n","<div>\n    <ul *ngIf=\"modalReady\">\n        <h1>Lend us a hand!</h1>\n        <h3>Our AI is still learning how to read scripts and it looks like we ran into a few issues</h3>\n       <div class=\"screenbox\">\n        <li *ngFor=\"let line of currentProblem.modalText; \"> \n           <div [ngClass]=\"getClass(line.css)\">{{line.text}}</div> \n        </li>\n        <li>\n            <div class={{currentProblem.finalText.css}}> {{currentProblem.finalText.text}}</div>\n        </li>\n    </div>\n    <div>Is the line in red DESCRIPTION or SOMETHING ELSE</div>\n    <div class=\"button-container\">\n       \n        <div>\n            <button (click)=\"updateScriptDoc(currentProblem.index,'dialog')\">something else</button>\n        </div>\n        <div>\n            <button (click)=\"updateScriptDoc(currentProblem.index,'first-description')\">description</button>\n        </div>\n    </div>\n    </ul>\n\n</div>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Profile - we're working on it</a>\n      <a mat-list-item href=\"#\">Upolad - coming soon</a>\n      <a mat-list-item href=\"#\">Pricing - also on the way</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Welcome to CheapSide</span>\n    </mat-toolbar>\n   <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-script',\n  templateUrl: './script.component.html',\n  styleUrls: ['./script.component.css']\n})\nexport class ScriptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>script works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\"\nimport { catchError, map } from 'rxjs/operators';  \nimport { HttpClientModule, HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\"\nimport { response } from 'express';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  script: string \n   httpOptions = {\n  headers:null,\n  params:null,\n  responseType:null \n  };\n  lineArr: any;\n  pagesArr:any;\n  issues:any;\n//   THIS NEEDS TO BE UN COMMENTED AND ADDED BEFORE ALL THE URL TARGETS IN THE GET METHODS\n  url: string = \"https://sides3.herokuapp.com\"\n\n \n  constructor(public httpClient:HttpClient) { }\n  getPDF(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers=new Headers();\n    this.httpOptions.responseType = \"blob\"\n    return this.httpClient.get( this.url+\"/complete\", {responseType:\"blob\", params:{name:this.script}})\n}\n  getFile(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers =new Headers();\n    this.httpOptions.responseType = \"blob\"\n\n    // console.log(name)\n    // headers.append('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    return this.httpClient.get(this.url+ '/download', {responseType: \"blob\", params:{name:this.script}})\n  } \nresetHttpOptions(){\n    this.httpOptions = {\n      headers:\"\",\n      params:null,\n      responseType:null\n    }\n  }\n  // get classified data \npostFile(fileToUpload: File): Observable<any> {\n \n  this.resetHttpOptions()\n  this.script = localStorage.getItem('name')\n  const endpoint ='/api';\n    const formData: FormData = new FormData();\n    formData.append('script', fileToUpload, fileToUpload.name);\n    return this.httpClient\n      .post(this.url+\"/api\", formData, this.httpOptions )\n      .pipe(map\n        (data =>{\n          return data\n        }))}\n        \n  generatePdf(sceneArr, name){\n  console.log(\"calling generatePDF\")\n  sceneArr.push(name)\n// change this to just refrence the page breaks and then add x out to all other lines\n\n  // let document= []\n  // document.push(name)\n  // sceneArr.forEach(pageArr => {\n  //   for (let i = 0; i < pageArr.length-1; i++){\n  //     document.push(this.lineArr[pageArr[i].index])\n  // }\n  // })\n console.log(sceneArr)\n  return  this.httpClient.post(this.url+\"/pdf\", sceneArr)\n}\n\n}\n\n  \n\n\n","import { Observable, Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit, OnDestroy {\n  fileToUpload: File\n  dataSubscription: Subscription\n  constructor(public upload:UploadService, public router:Router) { }\n  lines:any[]\n  $script_data:Observable<any>\n  ngOnInit(): void {\n\n    this.upload.lineArr = [];\n\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n\n    this.dataSubscription.unsubscribe()\n\n }\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n    localStorage.setItem('name', this.fileToUpload.name.replace(/.pdf/, \"\"))\n    this.$script_data = this.upload.postFile(this.fileToUpload)\n    this.dataSubscription = this.$script_data.subscribe(data=>{\n      console.log(data)\n      this.lines = data[0]\n      this.upload.lineArr = data[0]\n      this.upload.issues = data[1]\n      this.router.navigate([\"download\"])\n\n    })\n    \n \n\n    \n\n}\n  \n}\n","<div class=\"form-group center\">\n  <div>\n    <h3>Our AI saves your crew's time.</h3>\n\n    <h4>Give us a script - we'll give you your scenes.</h4>\n    <h4>We crawl your script and line out all the stuff you dont need so your PA's and AD's can get to real work</h4>\n    <h4>All for a buck.</h4>\n  </div>\n  <div class=\"three-column center\">\n\n    <h4>Your script is SAFE with us.</h4>\n    <h4>Our software NEVER saves your pages</h4>\n    <h4>We're backed by <a style=\"color:red\" href=\"https://www.heroku.com/policy/security\">Heroku</a> your script is in\n      good hands</h4>\n  </div>\n  <div class='center'>\n    <label for=\"file\">Upload your script</label>\n    <div>\n      <input name=\"script\" enctype=\"multipart/form-data\" type=\"file\" id=\"script\"\n        (change)=\"handleFileInput($event.target.files)\">\n    </div>\n  </div>\n</div>\n<div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}