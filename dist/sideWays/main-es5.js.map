{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/complete/complete.component.ts","webpack:///src/app/complete/complete.component.html","webpack:///src/app/dashboard-right/dashboard-right.component.ts","webpack:///src/app/dashboard-right/dashboard-right.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dual-dialog/dual-dialog.component.ts","webpack:///src/app/dual-dialog/dual-dialog.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/issue/issue.component.ts","webpack:///src/app/issue/issue.component.html","webpack:///src/app/line-out.service.ts","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/script/script.component.ts","webpack:///src/app/script/script.component.html","webpack:///src/app/upload.service.ts","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","entryComponents","bootstrap","CompleteComponent","upload","name","localStorage","getItem","downloadPDF","getPDF","subscribe","data","url","window","URL","createObjectURL","open","DashboardRightComponent","db","router","dialog","lineOut","datePipe","displayedColumns","dataReady","initialSelection","active","waitingForScript","finalDocReady","script","problemsData","collection","valueChanges","linesCrawled","doc","funData","totalLines","scriptLength","finalDocument","breaks","linesReady","date","Date","now","selected","pageLengths","pages","scriptProblems","modalData","scriptData","lineArr","totalPages","pagesArr","characters","filter","line","category","Set","map","text","replace","console","log","scenes","i","length","last","index","lastLine","lastPage","page","firstLine","preview","getPreview","dataSource","paginator","sort","probsArr","forEach","ind","scene","sceneIndex","problem","indexOf","push","pageNumber","newText","lastCharIndex","subCategory","num","event","filterValue","target","value","trim","toLowerCase","firstPage","sceneArr","a","b","first","merged","concat","apply","counter","visible","bar","item","xPos","numPages","layout","sortByNum","fullPages","used","sceneBreaks","includes","sceneNumber","hideCont","hideEnd","final","makeVisible","trues","end","next","cont","top","barY","yPos","j","current","endY","makeX","generatePdf","navigate","closeAll","array","x","y","problems","flat","pageNums","splice","dialogRef","width","afterClosed","result","callsheet","openFinalSpinner","getPdf","applyFilter","openDialog","DashboardComponent","file","getFile","DualDialogComponent","FooterComponent","IssueComponent","cdr","dualReady","dualEdit","pdfIssues","callsheetReady","docUploaded","awaitingData","selectionMade","undefined","detectChanges","close","postCallSheet","option","LineOutService","providedIn","NavComponent","breakpointObserver","isHandset$","observe","Handset","pipe","matches","NavbarComponent","ScriptComponent","UploadService","httpClient","httpOptions","headers","params","responseType","urls","append","Headers","get","post","fileToUpload","resetHttpOptions","formData","FormData","coverSheet","UploadComponent","total","totalCharacters","totalScenes","working","dataSubscription","unsubscribe","arr","missingTwo","findIndex","files","setItem","$script_data","postFile","lines","addTwo","two","lineCount","alert","pop","handleFileInput","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CompleteComponent } from './complete/complete.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UploadComponent } from './upload/upload.component';\n\n\nconst routes: Routes = [\n  { path: 'download', component: DashboardComponent},\n  { path: 'complete', component: CompleteComponent},\n  { path: '', component: UploadComponent},\n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sideWays';\n}\n","<div class=\"app\">\n<app-nav></app-nav>\n</div>\n\n\n\n","import { Observable } from 'rxjs';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DashboardLeftComponent } from './dashboard-left/dashboard-left.component';\nimport { DashboardRightComponent } from './dashboard-right/dashboard-right.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\n// material stuff\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ScriptComponent } from './script/script.component'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { FormsModule } from '@angular/forms';\nimport { CompleteComponent } from './complete/complete.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\nimport { MatProgressSpinnerModule} from \"@angular/material/progress-spinner\"\n\n// Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { DualDialogComponent } from './dual-dialog/dual-dialog.component';\nimport { FooterComponent } from './footer/footer.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n\n    DashboardRightComponent,\n    DashboardComponent,\n    NavbarComponent,\n    NavComponent,\n    ScriptComponent,\n    CompleteComponent,\n    IssueComponent,\n    DualDialogComponent,\n    FooterComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'sideWays'),\n    AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    FormsModule,\n\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    \n \n  ],\n  providers: [ \n    DatePipe],\n  entryComponents: [\n    IssueComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.component.html',\n  styleUrls: ['./complete.component.css']\n})\nexport class CompleteComponent implements OnInit {\nname:string = localStorage.getItem(\"name\")\n\n  constructor( public upload:UploadService) { }\n\n\n  ngOnInit(): void {\n\nthis.downloadPDF()\n \n  }\ndownloadPDF():void{\n\n    this.upload.getPDF(this.name).subscribe(data => {\n    var url = window.URL.createObjectURL(data);\n    window.open(url);\n})\n}\n}\n","<div>\n    <h1>Thanks helping us with SideWays! </h1>\n    <h1>Please hit us up at <a  style=\"color:red\" href=\"mailto:sidewaystesters@gmail.com\">sideWaysHelp@gmail.com</a> with any issues you encountered.</h1>\n    <h1>It would help us greatly if you could include\n        <ul>\n            <li>\n                The original PDF pages\n            </li>\n            <li>\n                The created pages\n            </li>\n            <li>\n                What browser you used and version you used.\n            </li>\n        </ul>\n    </h1>\n    <br>\n   \n    <h3> Thanks so much for your help as we move forward.  \n        <br>\n        and if you go the time <a routerLink=\"\">Do it again!</a>\n    </h3>\n    \n</div>\n<div>\n    <button (click)=\"downloadPDF()\">Download PDF</button>\n</div>\n","import { LineOutService } from './../line-out.service';\n\nimport { Observable } from 'rxjs';\nimport { IssueComponent } from './../issue/issue.component';\nimport { Router } from '@angular/router';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit, ViewChild, Inject, AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SelectionModel } from \"@angular/cdk/collections\"\nimport { Subscription } from 'rxjs';\nimport { last, first, flatMap } from 'rxjs/operators';\nimport text from 'body-parser/lib/types/text';\nimport { DatePipe } from '@angular/common';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { FindValueOperator } from 'rxjs/internal/operators/find';\nimport { Console } from 'console';\n\nexport interface ProblemArr { title: string; lines: any[] }\n@Component({\n  selector: 'app-dashboard-right',\n  templateUrl: './dashboard-right.component.html',\n  styleUrls: ['./dashboard-right.component.css']\n})\n\nexport class DashboardRightComponent implements OnInit {\n  _db: AngularFirestore;\n  problemsData: Observable<any>;\n  displayedColumns: string[] = ['number', \"page number\", 'text', \"preview\", \"select\"];\n  dataSource: MatTableDataSource<any>;\n  dataReady: boolean = false;\n  initialSelection: any[] = [];\n  active: boolean = true\n  selected: any[]\n  pages: any[]\n  scriptProblems: any[]\n  scriptData;\n  linesCrawled: Observable<any>\n  totalLines: any\n  date: number;\n  scenes: any[];\n  linesReady: boolean\n  waitingForScript: boolean = false;\n  finalDocReady:boolean = false;\n  characters: any\n  charactersCount: number\n  scenesCount: number\n  textToTest: string[];\n  modalData: any[]\n  selectedOB: any\n  pageLengths: any[];\n  length: number\n  totalPages: any;\n  layout: string;\n  callsheet: any;\n  scriptLength:number\n  subscription: Subscription\n  funData: AngularFirestoreCollection\n  finalDocument:any\n  script: string = localStorage.getItem(\"name\")\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  constructor(\n    public db: AngularFirestore, \n    public upload: UploadService,\n     public router: Router, \n     public dialog: MatDialog, \n     public lineOut: LineOutService,\n     private datePipe: DatePipe) {\n    this.db = db;\n    this.problemsData = db.collection('problemLines').valueChanges();\n    this.linesCrawled = db.collection('funData').doc('totalLines').valueChanges();\n    this.funData = db.collection('funData')\n    this.totalLines;\n    this.scriptLength;\n    // this.funData.doc('totalLines').valueChanges().subscribe(\n    //   doc => {\n    //     this.totalLines = doc['total'];\n    //     this.charactersCount = doc['characters'];\n    //     this.scenesCount = doc['scenes'];\n    //     console.log(this.scenes)\n    //     console.log(this.scenesCount)\n    //   })\n  }\n\n  ngOnInit(): void {\n    this.finalDocument = {\n      doc:{},\n      breaks:{}\n  }\n    this.waitingForScript = false;\n    this.linesReady = false;\n    this.date = Date.now()\n    this.selected = []\n    this.pageLengths = [];\n    this.pages = []\n    this.active = true;\n    this.scriptProblems = []\n    this.modalData = []\n    this.scriptData = this.upload.lineArr\n    this.totalPages = this.upload.pagesArr\n   \n\n\n    if (this.scriptData) {\n      this.characters = this.scriptData.filter(line => { return line.category === \"character\" })\n      this.characters = [...new Set(this.characters.map(line => line.text.replace(/\\s/g, '')))]\n    }\n    console.log(this.upload.lineArr)\n    if (this.totalPages && this.scriptData) {\n      this.scenes = this.scriptData\n        .filter(line => { return line.category === \"scene-header\" });\n      for (let i = 0; i < this.scenes.length; i++) {\n        // give scenes extra data\n        if (this.scenes[i + 1]) {\n          let last = this.scenes[i + 1].index\n          // next scenes first line\n          this.scenes[i].lastLine =\n            this.scriptData[this.scenes[i + 1].index - 1].index\n\n\n          // last lines page\n          this.scenes[i].lastPage = this.scriptData[this.scenes[i].lastLine].page\n          this.scenes[i].firstLine = this.scriptData[this.scenes[i].index - 1].index\n          this.scenes[i].preview = this.getPreview(i)\n\n        }\n        this.dataSource = new MatTableDataSource(this.scenes);\n\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.length = this.scriptData.length\n      }\n      // this.dataReady=true;\n      console.log(this.scenes)\n      console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n    }\n\n\n    let probsArr = []\n    // here is our issue !&@#!*@#&!#&!*&\n    this.scriptProblems.forEach(line => {\n      let ind = line.index;\n      let scene = this.scriptData[ind].sceneIndex;\n      let problem = this.scenes.map((scene) => scene.sceneIndex).indexOf(scene)\n      // MAP OVER THIS AN FLAG SCENES IF THEY HAVE  PROBLEM LINE\n      probsArr.push(problem)\n      // filter through script problems and then go to scenes and add problem flags for each index at proper location\n    })\n    //   if(probsArr.length>0){\n    //   probsArr = [...new Set(probsArr)]\n    //  for (let i=0; i< probsArr.length; i++){\n    //   //  get an array of problem lines for the scenes\n    //   if(this.scenes[probsArr[i].problems]){\n    //   this.scenes[probsArr[i]].problems = \n    //   this.scriptProblems.filter\n    //   (line => line.sceneNumber === probsArr[i])\n    //     }\n    //   }\n    //   this.db.collection('problemLines')\n    //   .add(\n    //     {title:this.script, \n    //       data:this.scriptProblems, \n    //       date:new Date().toISOString()\n    //     })\n    //   }\n\n    this.length = this.scriptData.length\n    // assign PAGENUMBER values to page 0 and 1 in order for future \n    for (let i = 0; i < 200; i++) {\n      this.scriptData[i].page == 0 ? this.scriptData[i].pageNumber = 0 :\n        this.scriptData[i].page == 1 ? this.scriptData[i].pageNumber = 1 :\n          this.scriptData\n    }\n  }\n  ngAfterViewInit(): void {\n    this.scriptLength = this.totalPages.length - 1\n    this.dataReady = true\n  }\n\n  // lets get lookback tighter  - should be able to refrence lastCharacterIndex\n  lookBack(line) {\n    let newText = \"\"\n    newText = this.scriptData[line.lastCharIndex].text\n    let ind = line.index\n\n    for (let i = line.lastCharIndex + 1; i < ind + 1; i++) {\n      newText = newText + \"\\n\" + this.scriptData[i].text;\n      if (this.scriptData[i].category === (\"more\" || \"page-number\" || \"page-number-hidden\")\n        || this.scriptData[i].subCategory === \"parenthetical\") {\n\n      }\n    }\n    return newText\n  }\n  // create preview text for table\n  getPreview(ind) {\n\n    return this.scenes[ind].preview =\n      this.scriptData[this.scenes[ind].index + 1].text + \" \" +\n      this.scriptData[this.scenes[ind].index + 2].text\n  }\n  getPages(data) {\n    let num = data[data.length - 1].page\n    for (let i = 2; i < num + 1; i++) {\n      let page = data.filter(line => line.page === i)\n      this.pages.push(page);\n      if (i === num) {\n        this.dataReady = true\n      }\n    }\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //  pass the scene to be made and the breaks ponts for the scene to be changed to visible true\n  makeVisible(sceneArr, breaks) {\n    console.log(sceneArr, breaks)\n    this.finalDocument.breaks = breaks\n    console.log(\"wubalaubudubdub\")\n    breaks = breaks.sort((a, b) => a.first - b.first)\n    let merged = [].concat.apply([], sceneArr);\n\n\n    let counter = 0;\n    for (let i = 0; i < merged.length; i++) {\n      if (breaks[counter] && merged[i].index > breaks[counter].first\n        && merged[i].index <= breaks[counter].last) {\n        merged[i].visible = \"true\";\n        if (merged[i].bar === \"noBar\") {\n          merged[i].bar = \"bar\"\n        }\n\n        if (merged[i].index === breaks[counter].last) {\n          counter += 1;\n        }\n      }\n      else if (!breaks[counter]) {\n        break;\n      }\n    }\n\n\n    merged.forEach(item => {\n      if\n        (item.category === \"page-number-hidden\" || item.category === \"page-number\") {\n        item.visible = 'true'\n        item.xPos = 87\n      }\n    })\n    console.log('merged')\n    console.log(merged)\n    return merged;\n  }\n\n  getPdf(sceneArr, name, numPages, layout) {\n    console.log(numPages)\n    console.log(\"THIS IS THE PAGES LENGTH\")\n    sceneArr = this.sortByNum(sceneArr);\n    // need first and last lines from selected\n    let fullPages = [];\n    let used = [];\n    let pages = [];\n    let sceneBreaks = [];\n    //  WALK THROUGH THIS\n    sceneArr.forEach(scene => {\n      for (let i = scene.page; i <= scene.lastPage; i++) {\n        if (!pages.includes(i)) {\n          pages.push(i);\n        }\n      }\n      let breaks = {\n        first: scene.firstLine,\n        last: scene.lastLine,\n        scene: scene.sceneNumber,\n        firstPage: scene.page,\n      };\n      sceneBreaks.push(breaks);\n    });\n    pages.forEach(page => {\n\n      let doc = this.scriptData.filter(scene => scene.page === page);\n      doc.push({\n        page: page,\n        bar: \"hideBar\",\n        hideCont: \"hideCont\",\n        hideEnd: \"hideEnd\"\n      });\n      fullPages.push(doc);\n    });\n    fullPages = fullPages.sort((a, b) => a[0].page > b[0].page ? 1 : -1)\n    console.log(\"FULL PAGES\")\n    console.log(fullPages)\n    let final = this.makeVisible(fullPages, sceneBreaks);\n    if (numPages.length > 1) {\n      // we need to find how long the script is so we know how to change the Y pos \n\n\n      //     THIS IS OUR PROBLEM RIGHT HERE\n      console.log(numPages[numPages.length - 1])\n      let lastPage = numPages[numPages.length - 1]\n      console.log(\"last page is here~!\")\n      console.log(lastPage)\n      final.push(lastPage)\n    }\n    let trues = final.filter(line => line.visible == 'true')\n    console.log(\"TRUES\")\n    console.log(trues)\n    let finalDocument = {\n      data: [],\n      name: name,\n      numPages: numPages.length,\n      layout: layout\n    }\n    let page = []\n    for (let i = 0; i < final.length; i++) {\n      if (final[i].page && !final[i].text) {\n        page.forEach(line => {\n          let target = page.indexOf(line)\n\n          if (page[target + 1] &&\n            (page[target + 1].visible == \"false\" || page[target + 1].category == \"scene-header\" ||\n              (page[target + 1].category == \"page-number\" &&\n                page[target + 2] && page[target + 2].category == \"scene-header\"))\n            &&\n            line.visible == \"true\") {\n            line.end = \"END\"\n          }\n        })\n        finalDocument.data.push(page)\n        page = []\n      } else {\n        page.push(final[i])\n      }\n    }\n    // create continue arrows\n    for (let i = 0; i < finalDocument.data.length - 1; i++) {\n      let last = finalDocument.data[i][finalDocument.data[i].length - 1];\n      let next = finalDocument.data[i + 1]\n\n      if (next[1].visible === \"true\") {\n        last.cont = \"CONTINUE\",\n          finalDocument.data[i + 1][0].cont = \"CONTINUE\",\n          finalDocument.data[i + 1][0].top = \"top\"\n      }\n\n      last.cont ?\n        last.barY = last.yPos - 10 :\n        last;\n\n      for (let j = 0; j < finalDocument.data[i].length; j++) {\n        let current = finalDocument.data[i][j]\n        current.visible == \"true\" &&\n          j < finalDocument.data.length - 1 &&\n          finalDocument.data[i][j + 1].visible == \"false\" &&\n          finalDocument.data[i][j + i].category != (\"page-number\" || \"page-number-text\") ?\n          current.end = \"END\" :\n          current;\n        current.end ? current.endY = current.yPos - 10 :\n          current;\n      }\n    }\n    console.log(\"final doc \")\n\n    console.log(finalDocument)\n    console.log(numPages)\n  this.finalDocument.doc = finalDocument\n\n  this.lineOut.makeX(finalDocument)\n  this.finalDocReady = true;\n\n    this.upload.generatePdf(finalDocument).subscribe(data => {\n      this.router.navigate([\"complete\"])\n      this.dialog.closeAll();\n    });\n  }\n\n  sortByNum(array) {\n    return array.sort((a, b) => {\n      let x = a.sceneNumber;\n      let y = b.sceneNumber;\n\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n  logSelected(): void {\n\n    let x = this.scenes.filter(scene => {\n      return scene.problems\n    }).map(scene => scene = scene.problems).flat()\n\n  }\n\n  makePages(scenes) {\n    let pageNums = scenes.map(scene => scene.page).sort((a, b) => a - b);\n    return pageNums\n\n  }\n  toggleSelected(event, scene) {\n    !this.selected.includes(scene) ?\n      this.selected.push(scene) :\n      this.selected.splice(this.selected.indexOf(scene, 1))\n    this.selected.length > 10 ?\n      this.active = false :\n      this.active = true\n  }\n  openDialog() {\n\n\n\n    if (this.modalData) {\n\n      const dialogRef = this.dialog.open(IssueComponent, {\n        width: '800px',\n        data: { scenes: this.modalData, selected: this.selected }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n\n        this.waitingForScript = true\n        result.callsheet = result.callsheet.name\n        this.callsheet = result.callsheet\n        this.openFinalSpinner()\n        let  scriptLength = this.totalPages.length-1\n        this.getPdf(this.selected, this.script, this.totalPages, result)\n      });\n    } else this.getPdf(this.selected, this.script, this.totalPages, \"\")\n\n  }\n\n  openFinalSpinner() {\n    this.waitingForScript = true;\n    if (this.waitingForScript) {\n      const dialogRef = this.dialog.open(IssueComponent, {\n        width: '800px',\n        data: {\n          selected: this.selected,\n          script: this.script,\n          totalPages: this.totalPages.length-1,\n          callsheet: this.callsheet,\n          waitingForScript: true,\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        result\n      })\n\n    }\n\n\n  }\n\n\n}\n\n\n\n\n","\n\n\n<div>\n  <div>\n    <h1 class=\"project-title\">Generating sides for\n      {{script}}-{{date | date }}</h1>\n  </div>\n  <div class=\"main-container two-column cell\">\n    <div class=\"controls-container\">\n      <h2>{{script}} scenes</h2>\n      <mat-form-field style=\"width:100%\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search your scenes here\" #input>\n      </mat-form-field>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"number\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Scene Number </th>\n            <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.sceneNumber}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"page number\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Page Number </th>\n            <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.pageNumber}} </td>\n          </ng-container>\n\n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"text\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n            <td mat-cell *matCellDef=\"let scene\"> {{scene.text}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Text </th>\n            <td mat-cell *matCellDef=\"let scene\"> {{scene.preview}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"select\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Select </th>\n            <td mat-cell *matCellDef=\"let scene; let i=index\">\n              <input type=\"checkbox\" name={{i+1}} (change)=\"toggleSelected($event, scene)\"\n                [attr.disabled]=\"active === false ? 'disabled' : null\"> </td>\n          </ng-container>\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n          <!-- Row shown when there is no matching data. -->\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n          </tr>\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n      </div>\n    </div>\n    <div class=\"data-feed cell\">\n      <h1> {{script}} sides</h1>\n      <h2>{{date | date: 'shortDate' }} scenes:</h2>\n      <ul>\n        <li *ngFor=\"let scene of selected\">\n          <pre>{{scene.sceneNumber}}     {{scene.text}}     {{scene.sceneNumber}}</pre>\n        </li>\n      </ul>\n      <div>\n        <button (click)=\"openDialog()\">getPDF</button>\n      </div>\n    </div>\n    <div>\n      <button (click)=\"this.lineOut.makeX(this.finalDocument)\">test the line out</button>\n    </div>\n\n  </div>\n  <div *ngIf=\"dataReady\" class=\"main-container\">\n    stats for nerds\n    <br>\n    Length: {{this.totalPages.length}}\n    <br>\n    <div *ngIf=\"finalDocReady\" class =\"two-column\">\n      <h1>Final doc here</h1>\n      <div class=\"cell\" *ngFor=\"let data of finalDocument.breaks | keyvalue\">\n        <h2>Breaks for doc</h2>\n        {{data.key}} :  {{data.value}}\n\n      </div>\n      <div class=\"cell\" *ngFor=\"let data of finalDocument.doc | keyvalue\">\n        <h2>data for pages</h2>\n        {{data.key}} :  {{data.value}}\n\n      </div >\n\n    </div>\n    <!-- <div *ngFor=\"let page of this.upload.pagesArr\">\n      text : {{page[0].text}}       page: {{page[0].page}}\n    \n  </div> -->\n\n    \n  </div>\n</div>\n","import { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  $download:Observable<any>\n  constructor(public upload:UploadService, public router:Router) { }\n  file:string\n  data:any;\n  ngOnInit(): void {\n    this.file = localStorage.getItem(\"name\")\n  }\n  getSheet(){\n  \n  this.upload.getFile(this.file).subscribe(data =>{ \n    var url = window.URL.createObjectURL(data);\n        window.open(url);\n    this.router.navigate([\"\"])\n        }\n  )\n}\n      \n}\n\n\n","<div class=\"main\">\n  <div class=\"button-container\">\n    <div class=\"white-logo\"></div>\n    <!-- engage this to download data for watson. -->\n    <!-- <h1>Processing complete on :</h1>\n  <h3>{{file}}</h3>\n<button mat-button color=\"accent\" class=\"success\"(click)=\"getSheet()\">download spreadsheet</button>\n  </div> -->\n\n    <app-dashboard-right></app-dashboard-right>\n  \n\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dual-dialog',\n  templateUrl: './dual-dialog.component.html',\n  styleUrls: ['./dual-dialog.component.css']\n})\nexport class DualDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dual-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section-border-top\"></div>\n<div class=\"footer-container red\">\n\n\n  <h4 class=\"footer-text\"> © 2021 Sides-Ways Script Sides LLC All Rights Reserved.</h4>\n  <div  class =\"footer-logo\">\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\n\nimport {\n  Component, OnInit, Inject,\n  AfterViewInit, ViewChild,\n  ElementRef, ChangeDetectorRef, inject, Input\n}\n  from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { reduce } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\n\nexport class IssueComponent implements OnInit, AfterViewInit {\n  @ViewChild('callSheet') el: ElementRef;\n  \n  dualReady: boolean = false;\n  dualEdit: boolean = false;\n  pdfIssues: boolean = false;\n  file:File;\n  callsheet:any;\n  selected: string;\n  callsheetReady: boolean = false;\n  docUploaded:boolean = false;\n  awaitingData: boolean = false;\n  // modalReady: boolean = false\n  selectionMade: boolean = false;\n  waitingForScript: boolean = false;\n  constructor(public upload: UploadService,\n    public dialogRef: MatDialogRef<IssueComponent>, public cdr: ChangeDetectorRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n   \n    this.callsheet = undefined;\n    this.selected = undefined;\n    this.callsheetReady = false;\n    this.callsheet = undefined;\n    this.awaitingData = false;\n    this.data.waitingForScript ?\n      this.waitingForScript = true:\n      this.waitingForScript = false;\n   \n\n  }\n  ngAfterViewInit(): void {\n    // figure out why the filter is not matching the sceneIndex - this should be easy\n\n\n\n    // this.toggleDual()\n    this.cdr.detectChanges();\n    // this.getProblems()\n\n\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n  }\n\n  addCallSheet() {\n  \n  console.log(this.selected, this.callsheet)\n    this.dialogRef.close({\n    selected: this.selected,\n  callsheet:this.file})\n  }\n\n\nhandleFileInput(file){\n  file === \"no callsheet\" ?\n    this.callsheetReady = true:\n    this.awaitingData = true;\n\n\n this.upload.postCallSheet(file[0]).subscribe(data =>{\n \n  console.log(\"callsheet compelte\")\n  this.callsheet = file[0]\n  this.docUploaded = true\n  this.callsheetReady = true\n  this.awaitingData = false;\n\n\n\n});\n\n}\n  selectOption(option) {\n    this.selectionMade = true;\n    this.selected = option\n  }\n\n}","<div class=\"modal red\">\n  <div *ngIf='!waitingForScript && selectionMade && !awaitingData'>\n    <h1>\n     Layout: {{this.selected}}\n    </h1>\n    <ul>\n      <h1>Scenes:</h1>\n      <li *ngFor=\"let text of data.selected\" style=\"list-style-type:none;\">{{text.text}}</li>\n    </ul>\n  </div>\n\n  <div *ngIf=\" !waitingForScript && !selectionMade && !awaitingData\">\n    <div>\n      <h1>Select a layout</h1>\n    </div>\n    <div  class=\"selections-container\"> \n      <div class=button-wrapper>\n        <div class=\"icon\" style=\"background-image:url(../../assets/vert.png)\"></div>\n        <h2>Single Copy</h2>\n        <button class=\"layout-button\" id=\"standard\" (click)=\"selectOption($event.target.id)\">Standard</button>\n      </div>\n      <div class=button-wrapper>\n      <div class=\"icon\" style=\"background-image:url(../../assets/horiz.png)\"></div>\n      <h2>Double Copy</h2>\n      <button class=\"layout-button\" id=\"landscape\" (click)=\"selectOption($event.target.id)\"> Landscape</button>\n    </div>\n  </div>\n</div>\n  <div class=\"\" *ngIf=\" !waitingForScript && !awaitingData && selectionMade && !callsheetReady \">\n    <h1>Add a call sheet.</h1>\n    <form #callSheet name=\"callSheet\" id=\"callSheet\">\n      <input enctype=\"multipart/form-data\" type=\"file\" (change)=\"handleFileInput($event.target.files)\">\n      <!-- <button (click)=\"handleFileInput('no callsheet')\">No callsheet</button> -->\n    </form>\n  </div>\n\n  <div *ngIf=\" !waitingForScript && !awaitingData && selectionMade && callsheetReady\" class=\"button-wrapper\">\n\n    <button class=\"close-button\" (click)=\"dialogRef.close({selected:this.selected, callsheet:this.callsheet})\">Get My\n      Sides</button>\n  </div>\n  <div *ngIf=\"waitingForScript\" >\n    <h1>BRB</h1>\n    <mat-progress-spinner style=\"display:none\" \n    mode=\"indeterminate\"\n  value=\"0\"></mat-progress-spinner>\n  <h3 class=\"spinner-text\">Processing Script</h3>\n    <div class=\"loading-image\">\n      <img class = \"spinning-bot\"src=\"../../assets/icons//robotWhite.png\">\n    </div>\n\n    <h2>Getting Sides</h2>\n\n\n</div>\n<div *ngIf=\"awaitingData && selectionMade\" >\n  Processing Call sheet\n  <mat-progress-spinner mode=\"indeterminate\" value=\"500\"></mat-progress-spinner>\n</div>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineOutService {\n\n  constructor() { }\nmakeX(doc){\n  console.log(doc)\n  console.log(\"doc\")\n}\n\n}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","\n<div class=\"full-vh\">\n    <app-navbar></app-navbar>\n   <router-outlet></router-outlet>\n   <app-footer></app-footer>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar red\">\n<h3 class=\"nav-item left logo\">SIDES-WAYS</h3>\n  <ul class=\"nav-links right\">\n    <li class=\"right nav-item\">\n      <a class= \"right\">ABOUT US</a>\n    </li>\n    <li class=\"right nav-item\" >\n        <a class= \"right\">ABOUT US</a>\n      </li>\n      <li class=\"right nav-item\">\n        <a class= \"right\">ABOUT US</a>\n      </li>\n      <li class=\"right nav-item\">\n        <a class=\"contact\">CONTACT US</a>\n      </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-script',\n  templateUrl: './script.component.html',\n  styleUrls: ['./script.component.css']\n})\nexport class ScriptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>script works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from \"rxjs\"\nimport { catchError, map } from 'rxjs/operators';  \nimport { HttpClientModule, HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\"\nimport { response } from 'express';\nimport { Console } from 'console';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  script: string \n  httpOptions = {\n    headers:null,\n    params:null,\n    responseType:null \n  };\n  lineArr: any;\n  lineCount:any\n  pagesArr:any;\n  issues:any;\n  coverSheet: any\n  msg:any\n \n  urls=[\n  \"https://sides3.herokuapp.com\",\n  \"http://localhost:8080\"\n]\nurl:string=this.urls[0]\n\n \n  constructor(public httpClient:HttpClient) { }\n  getPDF(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers=new Headers();\n    this.httpOptions.responseType = \"blob\"\n    return this.httpClient.get( this.url+\"/complete\", {responseType:\"blob\", params:{name:this.script}})\n}\n  getFile(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers =new Headers();\n    this.httpOptions.responseType = \"blob\"\n\n    // console.log(name)\n    // headers.append('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    return this.httpClient.get(this.url+ '/download', {responseType: \"blob\", params:{name:this.script}})\n  } \n  makeJSON(data){\n\n    console.log(\"firing make json from service\")\n    \n    return  this.httpClient.post(this.url+'/download', data)\n  \n    \n  }\nresetHttpOptions(){\n    this.httpOptions = {\n      headers:\"\",\n      params:null,\n      responseType:null\n    }\n  }\n  toggleUrl(){\n    if(this.url!=this.urls[0]){\n      this.url=this.urls[0]\n    } else\n    {this.url = this.urls[1]}\n    console.log(this.url)\n  }\n  // get classified data \npostFile(fileToUpload: File): Observable<any> {\n \n  this.resetHttpOptions()\n  this.script = localStorage.getItem('name')\n     console.log(fileToUpload)\n    const formData: FormData = new FormData();\n    formData.append('script', fileToUpload, fileToUpload.name);\n    console.log(formData)\n    return this.httpClient\n      .post(this.url+\"/api\", formData, this.httpOptions )\n      .pipe(map\n        (data =>{\n          return data\n        }))\n  }\n     \n        \n  generatePdf(sceneArr){\n  \n \n  console.log(\"calling generatePDF\")\n console.log(sceneArr[2])\n  return  this.httpClient.post(this.url+\"/pdf\", sceneArr )\n}\n\n\npostCallSheet(fileToUpload: File):Observable<any>{\n  this.resetHttpOptions()\n  console.log(fileToUpload.name)\n  const formData: FormData = new FormData();\n  this.coverSheet = fileToUpload\n  formData.append('callSheet', fileToUpload, fileToUpload.name);\n\n  return this.httpClient.post(this.url+\"/callsheet\", formData, this.httpOptions)\n  \n}\n\n\n\n\n}\n\n  \n\n\n","\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit, OnDestroy {\n  fileToUpload: File\n  funData: Observable<any>\n  totalLines:Subscription\n  totalScenes:Subscription\n  totalCharacters:Subscription\n  dataSubscription: Subscription\n  working:boolean;\n  constructor(public db:AngularFirestore, public upload:UploadService, public router:Router) {\n    this.db =db;\n    \n    this.funData = db.collection('funData').doc('totalLines').valueChanges();\n    this.totalLines;\n    this.funData.subscribe(doc => {\n     \n      this.totalLines =  doc.total,\n      this.totalCharacters = doc.characters;\n      this.totalScenes = doc.scenes\n      \n    \n    })\n   }\n  lines:any[]\n  $script_data:Observable<any>\n  ngOnInit(): void { \n    this.working = false;\n }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n\n    this.dataSubscription.unsubscribe()\n\n }\n addTwo(arr){\n  let missingTwo = arr.findIndex(ind => ind.text==='2.' && ind.category==\"page-number-hidden\")\n return missingTwo\n}\n  handleFileInput(files: FileList) {\n    console.log(\"firing over script\")\n    this.working = true\n    this.fileToUpload = files.item(0);\n    localStorage.setItem('name', this.fileToUpload.name.replace(/.pdf/, \"\"))\n    this.$script_data = this.upload.postFile(this.fileToUpload)\n    this.dataSubscription = \n    this.$script_data.subscribe(data=>{\n     console.log(data)\n      this.lines = data[0]\n     if (this.addTwo(data[0]).category){\n      let two = this.addTwo(data[0])\n      data[0][two].category = \"page-number\"\n     }\n       \n      // data [0] = lineArr\n      this.upload.lineArr = data[0]\n      let x = this.upload.lineArr.filter(line => line.category ==\"scene-header\")\n      console.log(this.upload.lineArr)\n      // data[1] = pagesArr\n      this.upload.pagesArr = data[1]\n      this.upload.lineCount = data[2].map(line => line.totalLines)\n      alert( \"your IP is safe. \" + data[3] + \" was just deleted from our servers.\")\n      data.pop()\n      this.router.navigate([\"download\"])\n\n    })\n    \n \n\n    \n\n}\n\n  \n}\n","<div *ngIf=\"working\" class=\"spinner-overlay center\">\n  <mat-card-content>\n    <mat-progress-spinner style=\"display:none\" mode=\"indeterminate\" value=\"0\"></mat-progress-spinner>\n    <h3 class=\"spinner-text\">Processing Script</h3>\n    <div class=\"loading-image\">\n      <img class=\"spinning-bot\" src=\"../../assets/icons//robotWhite.png\">\n    </div>\n    <h3 class=\"spinner-text\">Sit Tight.</h3>\n  </mat-card-content>\n</div>\n<div class=\"form-group two-column left red\">\n  <div class=\"left-cell\">\n\n    <div class='text-area'>\n      <div class=\"upload-headline\">\n        <h1 class=\"big-text\" style=\"padding-bottom:1%\">Welcome</h1>\n\n        <h1 class=\"big-text\"> to Sides-Ways</h1>\n      </div>\n      <div class='upload-description'>\n\n        <p>\n          AD's and PA's spend thousands of hours every year lining out sides to hand out on set.\n          Thats a lot of time that could be spent on other things.\n          <span>Enter: Sides-Ways</span>\n        </p>\n      </div>\n\n    </div>\n    <div class=\"left upload-description right-cell\">\n      <div class=\"details\">\n       \n        <div class=\"feature-block\">\n          <h4 class=\"feature-headline\">Simple</h4>\n          <br>\n          <h4>We make sides for sets. Thats it.</h4>\n          <h4>No subscriptions. NOTHING saved. Just sides. </h4>\n        </div>\n        <div class=\"feature-block\">\n          <h4 class=\"feature-headline\">Safe</h4>\n          <br>\n          <h4>We're backed by Heroku and Google.</h4>\n          <h4>Your IP is protected at all times.</h4>\n        </div>\n        <div class=\"feature-block\">\n          <h4 class=\"feature-headline\">Secure</h4>\n          <br>\n          <h4>No one EVER sees script. We record nothing.</h4>\n          <h4>We dont even have a database</h4>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"learn-more bold\">\n      <h3>Learn more <span class=\"arrow\">→</span> </h3>\n    </div>\n  </div>\n\n  <div class='center right-cell'>\n\n    <mat-card class=\"upload-card\">\n      <mat-card-header>\n        <div>\n          <img class=\"card-image\" src=\"../../assets/icons/redLogoFlat.png\">\n        </div>\n      </mat-card-header>\n\n      <mat-card-content>\n        <h3>Upload your script</h3>\n        <h3> We'll prep your sides</h3>\n      </mat-card-content>\n      <mat-card-actions>\n        <label class=\"uploadButton\">\n          <span>UPLOAD SCRIPT</span>\n          <input name=\"script\" enctype=\"multipart/form-data\" type=\"file\" id=\"script\"\n            (change)=\"handleFileInput($event.target.files)\">\n        </label>\n\n\n\n      </mat-card-actions>\n    </mat-card>\n  </div>\n  <div class=\"developer-tools\">\n\n\n    <h4>Tools for nerds (ignore this stuff):</h4>\n    <h5 class=\"yellow\">current target : {{this.upload.url}} </h5>\n\n\n    <button (click)=this.upload.toggleUrl()>Toggle Development Mode</button>\n\n  </div>\n</div>\n<!-- <div class=\"three-column center\">\n    <h1>{{totalScenes}} Scenes stablished</h1>\n    <h1>{{totalCharacters}} Characters met </h1>\n    <h1>{{totalLines}} Lines Crawled</h1>\n  </div> -->\n<!-- <div>\n    <h2>SidesWays</h2>\n\n    <h3>Thanks for helping us learn and grow!\n      \n      Please email and issues or problems with your script - or any ideas at all actually - to <a style=\"color:red\"\n        href=\"mailto:sideswaystesters@gmail.com\">sidesWaysHelp@gmail.com</a>\n    </h3>\n\n  </div> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig:{\n    apiKey: \"AIzaSyBXD5kQfAS4lrmSJxYAuEUq8sxvXgWmCio\",\n    authDomain: \"scriptthing.firebaseapp.com\",\n    databaseURL: \"https://scriptthing.firebaseio.com\",\n    projectId: \"scriptthing\",\n    storageBucket: \"scriptthing.appspot.com\",\n    messagingSenderId: \"195325163986\",\n    appId: \"1:195325163986:web:e7a70646f087850353300b\",\n    measurementId: \"G-XM3P84P6N7\"\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}