{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/complete/complete.component.ts","webpack:///src/app/complete/complete.component.html","webpack:///src/app/dashboard-right/dashboard-right.component.ts","webpack:///src/app/dashboard-right/dashboard-right.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dual-dialog/dual-dialog.component.ts","webpack:///src/app/dual-dialog/dual-dialog.component.html","webpack:///src/app/issue/issue.component.ts","webpack:///src/app/issue/issue.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/script/script.component.ts","webpack:///src/app/script/script.component.html","webpack:///src/app/upload.service.ts","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","entryComponents","bootstrap","CompleteComponent","upload","name","localStorage","getItem","downloadPDF","getPDF","subscribe","data","url","window","URL","createObjectURL","open","DashboardRightComponent","db","router","dialog","datePipe","displayedColumns","dataReady","initialSelection","active","script","problemsData","collection","valueChanges","linesCrawled","doc","funData","totalLines","linesReady","date","Date","now","selected","pageLengths","pages","scriptProblems","modalData","scriptData","lineArr","totalPages","pagesArr","characters","filter","line","category","Set","map","text","replace","scenes","i","length","last","index","lastLine","lastPage","page","firstLine","preview","getPreview","dataSource","paginator","sort","probsArr","forEach","ind","scene","sceneIndex","problem","indexOf","push","problems","sceneNumber","add","toISOString","console","log","pageNumber","newText","lastCharIndex","subCategory","num","event","filterValue","target","value","trim","toLowerCase","firstPage","sceneArr","breaks","a","b","first","merged","concat","apply","counter","visible","bar","item","arr","numPages","layout","sortByNum","fullPages","used","sceneBreaks","includes","hideCont","hideEnd","final","makeVisible","trues","finalDocument","end","next","cont","top","barY","yPos","j","current","endY","generatePdf","navigate","array","x","y","flat","pageNums","splice","dialogRef","width","afterClosed","result","callsheet","getPdf","openDialog","applyFilter","DashboardComponent","file","getFile","DualDialogComponent","IssueComponent","cdr","dualReady","dualEdit","pdfIssues","docUploaded","selectionMade","detectChanges","close","postCallSheet","option","addCallSheet","NavComponent","breakpointObserver","isHandset$","observe","Handset","pipe","matches","NavbarComponent","ScriptComponent","UploadService","httpClient","httpOptions","headers","params","responseType","append","Headers","get","post","fileToUpload","resetHttpOptions","formData","FormData","pop","unshift","coverSheet","providedIn","UploadComponent","total","totalCharacters","totalScenes","dataSubscription","unsubscribe","missingTwo","findIndex","files","setItem","$script_data","postFile","lines","addTwo","two","lineCount","handleFileInput","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CompleteComponent } from './complete/complete.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UploadComponent } from './upload/upload.component';\n\n\nconst routes: Routes = [\n  { path: 'download', component: DashboardComponent},\n  { path: 'complete', component: CompleteComponent},\n  { path: '', component: UploadComponent},\n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sideWays';\n}\n","<app-nav></app-nav>\n\n\n","import { Observable } from 'rxjs';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DashboardLeftComponent } from './dashboard-left/dashboard-left.component';\nimport { DashboardRightComponent } from './dashboard-right/dashboard-right.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ScriptComponent } from './script/script.component'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { FormsModule } from '@angular/forms';\nimport { CompleteComponent } from './complete/complete.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n// Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { DualDialogComponent } from './dual-dialog/dual-dialog.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n\n    DashboardRightComponent,\n    DashboardComponent,\n    NavbarComponent,\n    NavComponent,\n    ScriptComponent,\n    CompleteComponent,\n    IssueComponent,\n    DualDialogComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'sideWays'),\n    AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    FormsModule,\n \n  ],\n  providers: [ \n    DatePipe],\n  entryComponents: [\n    IssueComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.component.html',\n  styleUrls: ['./complete.component.css']\n})\nexport class CompleteComponent implements OnInit {\nname:string = localStorage.getItem(\"name\")\n\n  constructor( public upload:UploadService) { }\n\n\n  ngOnInit(): void {\n\nthis.downloadPDF()\n \n  }\ndownloadPDF():void{\n\n    this.upload.getPDF(this.name).subscribe(data => {\n    var url = window.URL.createObjectURL(data);\n    window.open(url);\n})\n}\n}\n","<div>\n    <h1>Thanks helping us with SideWays! </h1>\n    <h1>Please hit us up at <a  style=\"color:red\" href=\"mailto:sidewaystesters@gmail.com\">sideWaysHelp@gmail.com</a> with any issues you encountered.</h1>\n    <h1>It would help us greatly if you could include\n        <ul>\n            <li>\n                The original PDF pages\n            </li>\n            <li>\n                The created pages\n            </li>\n            <li>\n                What broweser you used.\n            </li>\n        </ul>\n    </h1>\n    <br>\n   \n    <h3> Thanks so much for your help as we move forward.  \n        <br>\n        and if you go tthe time <a routerLink=\"\">Do it again!</a>\n    </h3>\n    \n</div>\n<div>\n    <button (click)=\"downloadPDF()\">Download PDF</button>\n</div>\n","\nimport { Observable } from 'rxjs';\nimport { IssueComponent } from './../issue/issue.component';\nimport { Router } from '@angular/router';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit, ViewChild, Inject, AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SelectionModel } from \"@angular/cdk/collections\"\nimport { Subscription } from 'rxjs';\nimport { last, first, flatMap } from 'rxjs/operators';\nimport text from 'body-parser/lib/types/text';\nimport { DatePipe } from '@angular/common';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { FindValueOperator } from 'rxjs/internal/operators/find';\n\nexport interface ProblemArr{ title:string; lines:any[]}\n@Component({\n  selector: 'app-dashboard-right',\n  templateUrl: './dashboard-right.component.html',\n  styleUrls: ['./dashboard-right.component.css']\n})\n\nexport class DashboardRightComponent implements OnInit{\n  _db:AngularFirestore;\n  problemsData: Observable<any>;\n  displayedColumns: string[] = ['number', \"page number\", 'text', \"preview\", \"select\"];\n  dataSource: MatTableDataSource<any>;\n  dataReady: boolean = false;\n  initialSelection: any[] = [];\n  active: boolean = true\n  selected: any[]\n  pages: any[]\n  scriptProblems: any[]\n  scriptData;\n  linesCrawled:Observable<any>\n  totalLines:any\n  date: number ;\n  scenes: any[];\n  linesReady:boolean\n  characters:any\n  charactersCount:number\n  scenesCount:number\n  textToTest: string[];\n  modalData:any[]\n  selectedOB: any\n  pageLengths:any[];\n  length:number\n  totalPages:number;\n  layout:string;\n  \n  subscription: Subscription\n  funData: AngularFirestoreCollection\n  script: string = localStorage.getItem(\"name\")\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  constructor(public db:AngularFirestore, public upload: UploadService, public router: Router, public dialog: MatDialog, private datePipe: DatePipe) {\n  this.db = db;\n  this.problemsData = db.collection('problemLines').valueChanges();\n  this.linesCrawled = db.collection('funData').doc('totalLines').valueChanges();\n  this.funData = db.collection('funData')\n  this.totalLines;\n  // this.funData.doc('totalLines').valueChanges().subscribe(\n  //   doc => {\n  //     this.totalLines = doc['total'];\n  //     this.charactersCount = doc['characters'];\n  //     this.scenesCount = doc['scenes'];\n  //     console.log(this.scenes)\n  //     console.log(this.scenesCount)\n  //   })\n  }\n\n  ngOnInit(): void {\n  \n    this.linesReady = false;\n    this.date= Date.now()\n    this.selected = []\n    this.pageLengths = [];\n    this.pages = []\n    this.active = true;\n    this.scriptProblems = []\n    this.modalData =[]\n    this.scriptData = this.upload.lineArr\n    this.totalPages= this.upload.pagesArr\n   \n    this.characters = this.scriptData.filter(line => {return line.category === \"character\"})\n    this.characters = [...new Set(this.characters.map(line => line.text.replace(/\\s/g, '')))]\n    this.scenes = this.scriptData.filter\n      (line => { return line.category === \"scene-header\" })\n    for (let i = 0; i < this.scenes.length; i++) {\n      // give scenes extra data\n      if (this.scenes[i + 1]) {\n        let last = this.scenes[i + 1].index\n       \n\n        // next scenes first line\n        this.scenes[i].lastLine = this.scriptData[this.scenes[i + 1].index - 1].index\n        // last lines page\n        this.scenes[i].lastPage = this.scriptData[this.scenes[i].lastLine].page\n        this.scenes[i].firstLine = this.scriptData[this.scenes[i].index - 1].index\n        this.scenes[i].preview = this.getPreview(i)\n      \n      }\n      this.dataSource = new MatTableDataSource(this.scenes);\n \n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.length = this.scriptData.length\n    }\n    //  NO LONGER NECESARRY BECAUSE OF X Y POS\n    // this.scriptProblems = this.upload.issues\n    // this.scriptProblems.forEach(line => {\n    //   line.text = this.lookBack(line)\n    // })\n    this.dataReady=true;\n  \n    let probsArr = []\n    // here is our issue !&@#!*@#&!#&!*&\n    this.scriptProblems.forEach(line =>{\n      let ind = line.index;\n      let scene = this.scriptData[ind].sceneIndex;\n      let problem = this.scenes.map((scene) => scene.sceneIndex).indexOf(scene)\n    // MAP OVER THIS AN FLAG SCENES IF THEY HAVE  PROBLEM LINE\n      probsArr.push(problem)\n    // filter through script problems and then go to scenes and add problem flags for each index at proper location\n    })\n    if(probsArr.length>0){\n    probsArr = [...new Set(probsArr)]\n   for (let i=0; i< probsArr.length; i++){\n    //  get an array of problem lines for the scenes\n    if(this.scenes[probsArr[i].problems]){\n    this.scenes[probsArr[i]].problems = \n    this.scriptProblems.filter\n    (line => line.sceneNumber === probsArr[i])\n      }\n    }\n    this.db.collection('problemLines')\n    .add(\n      {title:this.script, \n        data:this.scriptProblems, \n        date:new Date().toISOString()\n      })\n    }\n    console.log(this.scriptData)\n    this.length = this.scriptData.length\n    // assign PAGENUMBER values to page 0 and 1 in order for future \n    for(let i =0; i<200; i++){\n      this.scriptData[i].page == 0 ? this.scriptData[i].pageNumber = 0 :\n      this.scriptData[i].page == 1 ? this.scriptData[i].pageNumber = 1 :\n      this.scriptData\n\n    }\n   }\n  // ngAfterViewInit():void{\n\n  // if( this.upload.lineArr){\n  //   this.linesReady = true;\n  //   this.updateFunData()\n  // }\n  // }\n  // updateFunData(){\n  //   this.linesReady = true\n  //   console.log(this.scenes)\n  //   console.log(this.scenesCount)\n  //   this.db.collection('funData')\n  //   .doc('totalLines')\n  //   .set({\n  //     total:this.length+this.totalLines,\n  //     scenes:this.scenesCount+this.scenes.length,\n  //     characters:this.charactersCount + this.characters.length,\n\n  //   })\n  \n  // }\n  \n  // lets get lookback tighter  - should be able to refrence lastCharacterIndex\n  lookBack(line) {\n    let newText = \"\"\n    newText=this.scriptData[line.lastCharIndex].text\n    let ind = line.index\n\n    for(let i=line.lastCharIndex+1; i<ind+1 ; i++){\n      newText = newText + \"\\n\" + this.scriptData[i].text;\n      if(this.scriptData[i].category ===(\"more\"||\"page-number\"||\"page-number-hidden\")\n      ||this.scriptData[i].subCategory === \"parenthetical\"){\n     \n      }\n   }\n return newText\n}\n  // create preview text for table\n  getPreview(ind) {\n \n    return this.scenes[ind].preview =\n      this.scriptData[this.scenes[ind].index + 1].text + \" \" +\n      this.scriptData[this.scenes[ind].index + 2].text\n  }\n  getPages(data) {\n    let num = data[data.length - 1].page\n    for (let i = 2; i < num + 1; i++) {\n      let page = data.filter(line => line.page === i)\n      this.pages.push(page);\n      if (i === num) {\n        this.dataReady = true\n      }\n    }\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // changeDual(line){\n  \n  //   line.siblings.forEach(sibling => {\n  //     sibling.visible = \"true\"\n  //     sibling.children.forEach(child => child.visible = \"true\")\n  //   })\n  // }\n//  pass the scene to be made and the breaks ponts for the scene to be changed to visible true\n  makeVisible(sceneArr, breaks) {\n   breaks = breaks.sort((a,b) => a.first - b.first)\n    console.log(sceneArr) \n    console.log(\"svene arr ^^^^^^\")\n    console.log(breaks)\n   let merged = [].concat.apply([], sceneArr);\n\n  \n   let counter = 0;\n    for (let i = 0; i < merged.length; i++) {\n      if (breaks[counter] && merged[i].index > breaks[counter].first \n          && merged[i].index <= breaks[counter].last) {\n            merged[i].visible = \"true\";\n            if(merged[i].bar===\"noBar\"){\n              merged[i].bar = \"bar\"\n            }\n          \n            // if(merged[i].siblings){\n            //   this.changeDual(merged[i])\n            // }\n            if (merged[i].index === breaks[counter].last) {\n                counter += 1;\n            }\n        }\n        else if (!breaks[counter]) {\n          break;\n        }\n    }\n \n\n    merged.forEach( item => {if\n      (item.category ===\"page-number-hidden\" || item.category ===\"page-number\")\n      { item.visible = 'true';\n    }})\n    return merged;\n}\ncheckPageOne(arr){\n \n  // for(let i=0 ;i<50; i++){\n\n  //      arr[i].page==1 ? arr[i].pageNumber=\"1\" : arr[i] = arr[i]\n  // }\n}\ngetPdf(sceneArr, name, numPages, layout) {\n \n  sceneArr = this.sortByNum(sceneArr);\n  // need first and last lines from selected\n  let fullPages = [];\n  \n  let used = [];\n  let pages = [];\n  let sceneBreaks = [];\n  \n  sceneArr.forEach(scene => {\n      for (let i = scene.page; i <= scene.lastPage; i++) {\n          if (!pages.includes(i)) {\n              pages.push(i);\n          }\n      }\n      let breaks = {\n          first: scene.firstLine,\n          last: scene.lastLine,\n          scene: scene.sceneNumber,\n          firstPage: scene.page,\n      };\n      sceneBreaks.push(breaks);\n  });\n  pages.forEach(page => {\n      \n      let doc = this.scriptData.filter(scene => scene.page === page);\n     \n      doc.push({ \n        page: page,\n        bar:\"hideBar\",\n        hideCont:\"hideCont\",\n        hideEnd:\"hideEnd\"\n\n      \n      });\n      fullPages.push(doc);\n      \n  });\n \n\n  fullPages = fullPages.sort((a,b) => a[0].page > b[0].page ? 1 :-1  )\n \n  // fullPages =  this.checkPageOne(fullPages)\n  let  final = this.makeVisible(fullPages, sceneBreaks);\n\n  \n  if(numPages.length>1){\n    numPages = numPages[numPages.length-1].page\n    final.push(numPages)\n  }\n  console.log(final)\n  let trues = final.filter(line => line.visible=='true')\n  console.log(trues)\n  let finalDocument = []\n  let page = []\n  for(let i=0; i<final.length;i++){\n    if(final[i].page && !final[i].text){\n   \n      page.forEach(line=>{\n        let target = page.indexOf(line)\n        if(page[target+1] && \n          (page[target+1].visible == \"false\" || page[target+1].category == \"scene-header\" ||\n           (page[target+1].category==\"page-number\" &&  page[target+2].category ==\"scene-header\"))\n           &&\n           line.visible == \"true\"){\n          line.end = \"END\"\n        }\n      })\n      finalDocument.push(page)\n      page=[]\n    } else {\n      page.push(final[i])\n    }\n  }\n  // create continue arrows\n  for (let i = 0; i< finalDocument.length-1;i++){\n    let last =  finalDocument[i][finalDocument[i].length-1];\n    let next =  finalDocument[i+1]\n    \n    if(next[1].visible === \"true\"){\n    last.cont=\"CONTINUE\", \n    finalDocument[i+1][0].cont = \"CONTINUE\",\n    finalDocument[i+1][0].top = \"top\"\n  }\n    \n    last.cont ? \n    last.barY=last.yPos-10: \n    last;\n\n   for( let j = 0; j<finalDocument[i].length;j++){\n     let current = finalDocument[i][j]\n      current.visible == \"true\" && \n      j < finalDocument.length-1 &&\n      finalDocument[i][j+1].visible == \"false\" ? \n      current.end = \"END\" :  current;\n      current.end ? current.endY = current.yPos-10:\n      current;\n   }\n  }  \n\n  this.upload.generatePdf(finalDocument, name, layout).subscribe(data => {\n      this.router.navigate([\"complete\"]);\n  });\n}\n  \n  sortByNum(array) {\n    return array.sort((a, b) => {\n      let x = a.sceneNumber;\n      let y = b.sceneNumber;\n\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n  logSelected(): void {\n   \n    let x =  this.scenes.filter( scene => {\n      return scene.problems\n    }).map( scene => scene = scene.problems).flat()\n  \n  }\n\n  makePages(scenes) {\n    let pageNums = scenes.map(scene => scene.page).sort((a, b) => a - b);\n    return pageNums\n\n  }\n  toggleSelected(event, scene) {\n    !this.selected.includes(scene) ?\n      this.selected.push(scene) :\n      this.selected.splice(this.selected.indexOf(scene, 1))\n      this.selected.length > 10 ?\n      this.active = false :\n      this.active = true\n  }\n  openDialog() {\n    // THIS.MODAL DATA IS THE PROBLEM SOMEWHERE\n\n    // this.modalData = this.scenes.filter(scene => {\n    //  if(scene.problems){console.log(scene)}\n     \n    //   return scene.problems\n    // }).map( scene => scene = scene.problems).flat();\n    \n    \n    if(this.modalData){\n      \n    // for (let i=0; i<this.modalData.length;i++) {\n    \n    //   if(this.modalData[i].text){\n    //   this.modalData[i].text = this.modalData[i].text.split(/\\n/)\n    // }\n    // }\n \n    const dialogRef = this.dialog.open(IssueComponent,{\n      width:'800px',\n      data:{scenes: this.modalData, selected: this.selected}\n    });\n   \n    \n   \n\n\n  \n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result)\n    result.callsheet = result.callsheet.name\n    console.log(result)\n    this.getPdf(this.selected, this.script, this.totalPages, result)\n    });\n  } else this.getPdf(this.selected, this.script, this.totalPages, \"\")\n    \n  }\n\n \n  }\n\n\n\n\n","<div class=\"main-container\">\n  <!-- hidden buttons for development -->\n<!-- <button (click)=\"logSelected()\">log</button>\n<button (click)=\"makePages(selected)\">make pages</button> -->\n    <div class=\"controls-container\">\n      <button (click)=\"openDialog()\">roll that beautiful bean footage</button>\n       <h1> Project: {{script}}</h1>\n        <h2>{{date | date: 'shortDate' }} scenes:</h2>\n        <ul>\n            <li *ngFor =\"let scene of selected\"><pre>{{scene.sceneNumber}}     {{scene.text}}     {{scene.sceneNumber}}</pre></li>\n            \n        </ul>\n    \n        <div>\n        <button (click)=\"openDialog()\">getPDF</button>\n      </div>\n      <div>\n        <!-- <ul>\n          <li *ngFor=\"let data of probsArr\">{{data.text}}</li>\n        </ul> -->\n       \n      </div>\n        <div>\n          <h1>Here's your scenes. </h1>\n          <h1>Select up to 10 and we'll make em set ready.</h1>\n          <h1>NOTICE - CURRENTLY THE LONGER THE FILE THE MORE SLIGHT DRIFT WE SEE IN THE FINAL PDF</h1>\n          <h1>WE RECOMMEDN TRYING TO KEEP THE SIDES UNDER 20 PAGES FOR A DAY</h1>\n\n        </div>\n        <mat-form-field style=\"width:100%\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          \n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n          \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Scene Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.sceneNumber}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"page number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Page Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.pageNumber}} </td>\n              </ng-container>\n          \n              <!-- Progress Column -->\n              <ng-container matColumnDef=\"text\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.text}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"preview\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Text </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.preview}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Select </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\">\n                    <input type=\"checkbox\" \n                    name ={{i+1}}\n               \n                    (change)=\"toggleSelected($event, scene)\" \n                    [attr.disabled] = \"active === false ? 'disabled' : null\"> </td>\n              </ng-container>\n          \n          \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          \n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n              </tr>\n            </table>\n          \n            <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\n          </div>\n  \n       \n\n    </div>\n\n</div>\n","import { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  $download:Observable<any>\n  constructor(public upload:UploadService, public router:Router) { }\n  file:string\n  data:any;\n  ngOnInit(): void {\n    this.file = localStorage.getItem(\"name\")\n  }\n  getSheet(){\n  \n  this.upload.getFile(this.file).subscribe(data =>{ \n    var url = window.URL.createObjectURL(data);\n        window.open(url);\n    this.router.navigate([\"\"])\n        }\n  )\n}\n      \n}\n\n\n","<div class=\"main\" >\n  \n<div class=\"button-container\">\n  <!-- engage this to download data for watson. -->\n  <!-- <h1>Processing complete on :</h1>\n  <h3>{{file}}</h3>\n<button mat-button color=\"accent\" class=\"success\"(click)=\"getSheet()\">download spreadsheet</button>\n  </div> -->\n \n  <app-dashboard-right\n  ></app-dashboard-right>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dual-dialog',\n  templateUrl: './dual-dialog.component.html',\n  styleUrls: ['./dual-dialog.component.css']\n})\nexport class DualDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dual-dialog works!</p>\n","import { HttpClient } from '@angular/common/http';\n\nimport {\n  Component, OnInit, Inject,\n  AfterViewInit, ViewChild,\n  ElementRef, ChangeDetectorRef, inject\n}\n  from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { reduce } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\nexport class IssueComponent implements OnInit, AfterViewInit {\n  @ViewChild('callSheet') el: ElementRef;\n  dualReady: boolean = false;\n  dualEdit: boolean = false;\n  pdfIssues: boolean = false;\n  file:File;\n  callsheet:any;\n  selected: string;\n  docUploaded:boolean = false;\n  // modalReady: boolean = false\n  selectionMade: boolean = false;\n  constructor(public upload: UploadService,\n    public dialogRef: MatDialogRef<IssueComponent>, public cdr: ChangeDetectorRef,\n    @Inject(MAT_DIALOG_DATA) public data: string) { }\n\n  ngOnInit(): void {\n\n\n  }\n  ngAfterViewInit(): void {\n    // figure out why the filter is not matching the sceneIndex - this should be easy\n\n\n\n    // this.toggleDual()\n    this.cdr.detectChanges();\n    // this.getProblems()\n\n\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n  }\n\n  addCallSheet() {\n  \n  console.log(this.selected, this.callsheet)\n    this.dialogRef.close({\n    selected: this.selected,\n    callsheet:this.file})\n  }\n\n\nhandleFileInput(file){\nthis.file = file[0]\nconsole.log(this.file)\nthis.docUploaded = true;\nconsole.log(this.docUploaded)\n\n this.upload.postCallSheet(this.file).subscribe(data =>{\n  console.log(data)\n  this.callsheet = this.file\n\n\n})\n\n}\n  selectOption(option) {\n    this.selectionMade = true;\n    this.selected = option\n  }\n\n}","<div class=\"modal\">\n  <h1>Select a layout</h1>\n  <h1 *ngIf='selectionMade'>you picked {{selected}}</h1>\n  <div *ngIf=\"!selectionMade\" class=\"selections-container\">\n    <div class=button-wrapper>\n      <div class=\"icon\" style= \"background-image:url(../../assets/vert.png)\"></div>\n    <button class=\"layout-button\" id=\"standard\" (click) = \"selectOption($event.target.id)\">Standard</button>\n  </div>\n  <div class=button-wrapper>\n    <div class=\"icon\" style= \"background-image:url(../../assets/horiz.png)\"></div>\n    <button class=\"layout-button\" id=\"landscape\"  (click) = \"selectOption($event.target.id)\"> Landscape</button>\n  </div>\n</div>\n<div class=\"\" *ngIf=\"selectionMade\">\n  <h1>Add a call sheet?</h1>\n   <form  #callSheet name=\"callSheet\" id=\"callSheet\"> \n  <input enctype=\"multipart/form-data\" type=\"file\" (change)=\"handleFileInput($event.target.files)\" >\n \n</form>\n</div>\n<div *ngIf=\"docUploaded\">\n  <iframe src=\"{{file}}\">\n\n  </iframe>\n</div>\n<button class=\"close-button\" (click)=\"addCallSheet()\">Get my sides!</button>\n<button class=\"close-button\" (click)=\"dialogRef.close({selected:this.selected})\">Nah, just get my sides</button>\n</div>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Profile - we're working on it</a>\n      <a mat-list-item href=\"#\">Upolad - coming soon</a>\n      <a mat-list-item href=\"#\">Pricing - also on the way</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Welcome to SideWays - Robo powered production</span>\n    </mat-toolbar>\n   <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-script',\n  templateUrl: './script.component.html',\n  styleUrls: ['./script.component.css']\n})\nexport class ScriptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>script works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\"\nimport { catchError, map } from 'rxjs/operators';  \nimport { HttpClientModule, HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\"\nimport { response } from 'express';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  script: string \n  httpOptions = {\n    headers:null,\n    params:null,\n    responseType:null \n  };\n  lineArr: any;\n  lineCount:any\n  pagesArr:any;\n  issues:any;\n  coverSheet: any\n\n  url:string = \"https://sides3.herokuapp.com\";\n\n  // url:string = \"http://localhost:8080\"\n\n \n  constructor(public httpClient:HttpClient) { }\n  getPDF(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers=new Headers();\n    this.httpOptions.responseType = \"blob\"\n    return this.httpClient.get( this.url+\"/complete\", {responseType:\"blob\", params:{name:this.script}})\n}\n  getFile(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers =new Headers();\n    this.httpOptions.responseType = \"blob\"\n\n    // console.log(name)\n    // headers.append('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    return this.httpClient.get(this.url+ '/download', {responseType: \"blob\", params:{name:this.script}})\n  } \n  makeJSON(data){\n\n    console.log(\"firing make json from service\")\n    \n    return  this.httpClient.post(this.url+'/download', data)\n  \n    \n  }\nresetHttpOptions(){\n    this.httpOptions = {\n      headers:\"\",\n      params:null,\n      responseType:null\n    }\n  }\n  // get classified data \npostFile(fileToUpload: File): Observable<any> {\n \n  this.resetHttpOptions()\n  this.script = localStorage.getItem('name')\n     console.log(fileToUpload)\n    const formData: FormData = new FormData();\n    formData.append('script', fileToUpload, fileToUpload.name);\n    console.log(formData)\n    return this.httpClient\n      .post(this.url+\"/api\", formData, this.httpOptions )\n      .pipe(map\n        (data =>{\n          return data\n        }))\n  }\n     \n        \n  generatePdf(sceneArr,name,layout){\n   \n  sceneArr.push(name);\n  \n  let title = sceneArr[sceneArr.length-1] \n  sceneArr.pop()\n  sceneArr.unshift(title)\n\n  sceneArr[sceneArr.length-1].push(this.pagesArr[this.pagesArr.length-1].page)\n  sceneArr.push(layout)\n  console.log(\"calling generatePDF\")\n  console.log(sceneArr[sceneArr.length-1])\n  return  this.httpClient.post(this.url+\"/pdf\", sceneArr )\n}\n\nlsls\npostCallSheet(fileToUpload: File):Observable<any>{\n  this.resetHttpOptions()\n  console.log(fileToUpload.name)\n  const formData: FormData = new FormData();\n  this.coverSheet = fileToUpload\n  formData.append('callSheet', fileToUpload, fileToUpload.name);\n\n  return this.httpClient.post(this.url+\"/callsheet\", formData, this.httpOptions)\n  \n}\n\n\n\n\n}\n\n  \n\n\n","\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit, OnDestroy {\n  fileToUpload: File\n  funData: Observable<any>\n  totalLines:Subscription\n  totalScenes:Subscription\n  totalCharacters:Subscription\n  dataSubscription: Subscription\n  constructor(public db:AngularFirestore, public upload:UploadService, public router:Router) {\n    this.db =db;\n    \n    this.funData = db.collection('funData').doc('totalLines').valueChanges();\n    this.totalLines;\n    this.funData.subscribe(doc => {\n     \n      this.totalLines =  doc.total,\n      this.totalCharacters = doc.characters;\n      this.totalScenes = doc.scenes\n      \n    \n    })\n   }\n  lines:any[]\n  $script_data:Observable<any>\n  ngOnInit(): void { \n }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n\n    this.dataSubscription.unsubscribe()\n\n }\n addTwo(arr){\n  let missingTwo = arr.findIndex(ind => ind.text==='2.' && ind.category==\"page-number-hidden\")\n return missingTwo\n}\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n    localStorage.setItem('name', this.fileToUpload.name.replace(/.pdf/, \"\"))\n    this.$script_data = this.upload.postFile(this.fileToUpload)\n    this.dataSubscription = \n    this.$script_data.subscribe(data=>{\n     console.log(data)\n      this.lines = data[0]\n     if (this.addTwo(data[0]).category){\n      let two = this.addTwo(data[0])\n      data[0][two].category = \"page-number\"\n     }\n      \n      this.upload.lineArr = data[0]\n      let x = this.upload.lineArr.filter(line => line.category ==\"scene-header\")\n      console.log(this.upload.lineArr)\n      this.upload.pagesArr = data[1]\n      this.upload.lineCount = data[2].map(line => line.totalLines)\n \n      this.router.navigate([\"download\"])\n\n    })\n    \n \n\n    \n\n}\n\n  \n}\n","<div class=\"form-group center\">\n  <div>\n    <h1>Welcome to SideWays</h1>\n\n    <ul>\n      <li>\n        <h3>We're bringing the efficency of modern AI to film production.</h3>\n      </li>\n      <li>\n        <h3> AD's and PA's spend thousands of hours every year lining out sides to hand out on set.</h3>\n      </li>\n      <li>\n        <h3> Thats a lot of time that could be spent on other things.</h3>\n      </li>\n\n    </ul>\n\n  </div>\n  <div class=\"three-column center\">\n\n    <h4>Safe.\n      <br>\n      We dont save your script.\n      <br>Your IP is protected.\n    </h4>\n    <h4>Simple.\n      <br>We make sides and get better at making sides.\n      <br>\n      No subscriptions. No Logins.\n      <br>\n      Just sides. </h4>\n\n    <h4>Secure.\n      <br>\n      We're backed by <a style=\"color:red\" href=\"https://www.heroku.com/policy/security\">Heroku.\n      </a>\n      <br>The web's most trusted cloud infrastructure</h4>\n  </div>\n  <div class=\"warning-box\">\n    <h1>DAKOTA!</h1>\n    <h3>First off thanks for helping us out.  Hopefully with you input we can refine this bad boy more and get it to the market</h3>\n    <h3> The only thing we ask is that the file not have a watermark and have proper formatting and we should be good to go</h3>\n    <h1>thanks brother!</h1>\n     </div>\n     <div class='center'>\n   \n     <h3>Upload your script here and we'll prep your sides</h3>\n       <label for=\"file\"></label>\n       <div>\n         <input name=\"script\" enctype=\"multipart/form-data\" type=\"file\" id=\"script\"\n           (change)=\"handleFileInput($event.target.files)\">\n       </div>\n     </div>\n  <!-- <div class=\"three-column center\">\n    <h1>{{totalScenes}} Scenes stablished</h1>\n    <h1>{{totalCharacters}} Characters met </h1>\n    <h1>{{totalLines}} Lines Crawled</h1>\n  </div> -->\n  <div>\n    <h2>SideWays</h2>\n\n    <h3>Thanks for helping us learn and grow!\n      \n      Please email and issues or problems with your script - or any ideas at all actually - to <a style=\"color:red\"\n        href=\"mailto:sidewaystesters@gmail.com\">sideWaysHelp@gmail.com</a>\n    </h3>\n\n  </div>\n\n</div>\n<div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig:{\n    apiKey: \"AIzaSyBXD5kQfAS4lrmSJxYAuEUq8sxvXgWmCio\",\n    authDomain: \"scriptthing.firebaseapp.com\",\n    databaseURL: \"https://scriptthing.firebaseio.com\",\n    projectId: \"scriptthing\",\n    storageBucket: \"scriptthing.appspot.com\",\n    messagingSenderId: \"195325163986\",\n    appId: \"1:195325163986:web:e7a70646f087850353300b\",\n    measurementId: \"G-XM3P84P6N7\"\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}