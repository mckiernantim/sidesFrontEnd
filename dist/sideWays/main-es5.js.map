{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/complete/complete.component.ts","webpack:///src/app/complete/complete.component.html","webpack:///src/app/dashboard-left/dashboard-left.component.ts","webpack:///src/app/dashboard-right/dashboard-right.component.ts","webpack:///src/app/dashboard-right/dashboard-right.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/issue/issue.component.ts","webpack:///src/app/issue/issue.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/script/script.component.ts","webpack:///src/app/script/script.component.html","webpack:///src/app/upload.service.ts","webpack:///src/app/upload/upload.component.ts","webpack:///src/app/upload/upload.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","entryComponents","bootstrap","CompleteComponent","upload","name","localStorage","getItem","downloadPDF","getPDF","subscribe","data","url","window","URL","createObjectURL","open","DashboardLeftComponent","DashboardRightComponent","router","dialog","datePipe","displayedColumns","dataReady","initialSelection","active","script","date","Date","now","selected","pages","scriptProblems","modalData","scriptData","lineArr","scenes","filter","line","category","i","length","last","index","lastLine","lastPage","pageNumber","firstLine","preview","getPreview","dataSource","paginator","sort","issues","forEach","text","lookBack","probsArr","ind","scene","sceneIndex","problem","map","indexOf","push","Set","problems","sceneNumber","console","log","newText","lastCharIndex","subCategory","num","page","event","filterValue","target","value","trim","toLowerCase","firstPage","sceneArr","breaks","merged","concat","apply","counter","first","visible","sortByNum","fullPages","used","sceneBreaks","includes","doc","final","makeVisible","generatePdf","navigate","array","a","b","x","y","pageNums","splice","flat","split","dialogRef","width","afterClosed","result","getPdf","openDialog","applyFilter","DashboardComponent","file","getFile","IssueComponent","modalProblems","problemIndex","modalReady","getProblems","updateProblem","currentProblem","lineCSS","modalText","css","finalText","pop","close","str","iterateProblem","NavComponent","breakpointObserver","isHandset$","observe","Handset","pipe","matches","NavbarComponent","ScriptComponent","UploadService","httpClient","httpOptions","headers","params","responseType","append","Headers","get","fileToUpload","resetHttpOptions","endpoint","formData","FormData","post","providedIn","UploadComponent","dataSubscription","unsubscribe","files","item","setItem","replace","$script_data","postFile","lines","handleFileInput","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CompleteComponent } from './complete/complete.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UploadComponent } from './upload/upload.component';\n\n\nconst routes: Routes = [\n  { path: 'download', component: DashboardComponent},\n  { path: 'complete', component: CompleteComponent},\n  { path: '', component: UploadComponent},\n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sideWays';\n}\n","<app-nav></app-nav>\n\n","import { Observable } from 'rxjs';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { DashboardLeftComponent } from './dashboard-left/dashboard-left.component';\nimport { DashboardRightComponent } from './dashboard-right/dashboard-right.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { ScriptComponent } from './script/script.component'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { FormsModule } from '@angular/forms';\nimport { CompleteComponent } from './complete/complete.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n    DashboardLeftComponent,\n    DashboardRightComponent,\n    DashboardComponent,\n    NavbarComponent,\n    NavComponent,\n    ScriptComponent,\n    CompleteComponent,\n    IssueComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    FormsModule,\n \n  ],\n  providers: [ \n    DatePipe],\n  entryComponents: [\n    IssueComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.component.html',\n  styleUrls: ['./complete.component.css']\n})\nexport class CompleteComponent implements OnInit {\nname:string = localStorage.getItem(\"name\")\n\n  constructor( public upload:UploadService) { }\n\n\n  ngOnInit(): void {\n\nthis.downloadPDF()\n \n  }\ndownloadPDF():void{\n\n    this.upload.getPDF(this.name).subscribe(data => {\n    var url = window.URL.createObjectURL(data);\n    window.open(url);\n})\n}\n}\n","<div>\n    <h1>Thanks for using Cheap Sides </h1>\n    <h3> we've got a lot more in the pipe so stay tuned</h3>\n</div>\n<div>\n    <button (click)=\"downloadPDF()\">Download PDF</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-left',\n  templateUrl: './dashboard-left.component.html',\n  styleUrls: ['./dashboard-left.component.css']\n})\nexport class DashboardLeftComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { IssueComponent } from './../issue/issue.component';\nimport { Router } from '@angular/router';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit, ViewChild, Inject} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SelectionModel } from \"@angular/cdk/collections\"\nimport { Subscription } from 'rxjs';\nimport { last, first } from 'rxjs/operators';\nimport text from 'body-parser/lib/types/text';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-dashboard-right',\n  templateUrl: './dashboard-right.component.html',\n  styleUrls: ['./dashboard-right.component.css']\n})\nexport class DashboardRightComponent implements OnInit {\n  displayedColumns: string[] = ['number', \"page number\", 'text', \"preview\", \"select\"];\n  dataSource: MatTableDataSource<any>;\n  dataReady: boolean = false;\n  initialSelection: any[] = [];\n  active: boolean = true\n  selected: any[]\n  pages: any[]\n  scriptProblems: any[]\n  scriptData;\n  date: number ;\n  scenes: any[]\n  textToTest: string[];\n  modalData:any[]\n  selectedOB: any\n  subscription: Subscription\n  script: string = localStorage.getItem(\"name\")\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  constructor(public upload: UploadService, public router: Router, public dialog: MatDialog, private datePipe: DatePipe) {\n\n  }\n\n  ngOnInit(): void {\n    this.date= Date.now()\n    this.selected = []\n    this.pages = []\n    this.active = true;\n    this.scriptProblems = []\n    this.modalData =[]\n    this.scriptData = this.upload.lineArr\n    this.scenes = this.scriptData.filter\n      (line => { return line.category === \"scene-header\" })\n    for (let i = 0; i < this.scenes.length; i++) {\n      if (this.scenes[i + 1]) {\n        let last = this.scenes[i + 1].index\n        this.scenes[i].lastLine = this.scriptData[this.scenes[i + 1].index - 1].index\n        this.scenes[i].lastPage = this.scriptData[this.scenes[i].lastLine].pageNumber\n        this.scenes[i].firstLine = this.scriptData[this.scenes[i].index - 1].index\n        this.scenes[i].preview = this.getPreview(i)\n      }\n      this.dataSource = new MatTableDataSource(this.scenes);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n    \n    this.scriptProblems = this.upload.issues\n    this.scriptProblems.forEach(line => {\n      line.text = this.lookBack(line)\n    })\n    this.dataReady=true;\n    let probsArr = []\n    this.scriptProblems.forEach(line =>{\n      let ind = line.index;\n      let scene = this.scriptData[ind].sceneIndex;\n      let problem = this.scenes.map((scene) => scene.sceneIndex).indexOf(scene)\n      // MAP OVER THIS AN FLAG SCENES IF THEY HAVE  PROBLEM LOINE\n      probsArr.push(problem)\n    \n      \n// filter through script problems and then go to scenes and add problem flags for each index at proper location\n    })\n    probsArr = [...new Set(probsArr)]\n\n   for (let i=0; i< probsArr.length; i++){\n     this.scenes[probsArr[i]].problems = this.scriptProblems.filter(line => line.sceneNumber === probsArr[i]);\n}\n   console.log(this.scenes)\n   console.log(this.scriptProblems)\n   console.log(this.scriptData)\n  }\n\n  \n  // lets get lookback tighter  - should be able to refrence lastCharacterIndex\n  lookBack(line) {\n    let newText = \"\"\n    newText=this.scriptData[line.lastCharIndex].text\n    let ind = line.index\n\n    for(let i=line.lastCharIndex+1; i<ind+1 ; i++){\n      newText = newText + \"\\n\" + this.scriptData[i].text;\n      if(this.scriptData[i].category ===(\"more\"||\"page-number\"||\"page-number-hidden\")||this.scriptData[i].subCategory === \"parenthetical\"){\n        // console.log(\"FOUND IT AHWJHWAKJEHAKWJH\")\n        // ind+=1\n      }\n   }\n return newText\n\n}\n  // create preview text for table\n  getPreview(ind) {\n    return this.scenes[ind].preview =\n      this.scriptData[this.scenes[ind].index + 1].text + \" \" +\n      this.scriptData[this.scenes[ind].index + 2].text\n  }\n  getPages(data) {\n    let num = data[data.length - 1].pageNumber\n    for (let i = 2; i < num + 1; i++) {\n      let page = data.filter(line => line.pageNumber === i)\n      this.pages.push(page);\n      if (i === num) {\n        this.dataReady = true\n      }\n    }\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  makeVisible(sceneArr, breaks) {\n    let merged = [].concat.apply([], sceneArr);\n    let counter = 0;\n    for (let i = 0; i < merged.length; i++) {\n        if (breaks[counter] && merged[i].index > breaks[counter].first && merged[i].index <= breaks[counter].last) {\n            merged[i].visible = \"true\";\n            if (merged[i].index === breaks[counter].last) {\n                console.log(\"increasing counter\");\n                counter += 1;\n            }\n        }\n        else if (!breaks[counter]) {\n            console.log(i);\n            break;\n        }\n    }\n    console.log(merged);\n    return merged;\n}\ngetPdf(sceneArr, name) {\n  sceneArr = this.sortByNum(sceneArr);\n  // need first and last lines from selected\n  let fullPages = [];\n  let used = [];\n  let pages = [];\n  let sceneBreaks = [];\n  sceneArr.forEach(scene => {\n      for (let i = scene.pageNumber; i <= scene.lastPage; i++) {\n          if (!pages.includes(i)) {\n              pages.push(i);\n          }\n      }\n      let breaks = {\n          first: scene.firstLine,\n          last: scene.lastLine,\n          scene: scene.sceneNumber,\n          firstPage: scene.pageNumber,\n      };\n      sceneBreaks.push(breaks);\n  });\n  pages.forEach(page => {\n      console.log(page);\n      let doc = this.scriptData.filter(scene => scene.pageNumber === page);\n      doc.push({ pageNumber: page });\n      fullPages.push(doc);\n      console.log(fullPages)\n  });\n \n  console.log(sceneBreaks)\n  let final = this.makeVisible(fullPages, sceneBreaks);\n  console.log(final);\n\n  this.upload.generatePdf(final, name).subscribe(data => {\n      this.router.navigate([\"complete\"]);\n  });\n}\n  sortByNum(array) {\n    return array.sort((a, b) => {\n      let x = a.sceneNumber;\n      let y = b.sceneNumber;\n\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n  logSelected(): void {\n    console.log(this.selected)\n    console.log(this.scriptData)\n    console.log(this.scenes)\n  }\n  makePages(scenes) {\n    let pageNums = scenes.map(scene => scene.pageNumber).sort((a, b) => a - b);\n    return pageNums\n\n  }\n  toggleSelected(event, scene) {\n    !this.selected.includes(scene) ?\n      this.selected.push(scene) :\n      this.selected.splice(this.selected.indexOf(scene, 1))\n    this.selected.length > 10 ?\n      this.active = false :\n      this.active = true\n  }\n  openDialog() {\n    this.modalData = this.scenes.filter( scene => {\n      return scene.problems\n    }).map( scene => scene = scene.problems).flat()\n    if(this.modalData){\n    for (let i=0; i<this.modalData.length;i++) {\n      console.log(this.modalData[i])\n      if(this.modalData[i].text){\n      this.modalData[i].text = this.modalData[i].text.split(/\\n/)\n    }\n    }\n    const dialogRef = this.dialog.open(IssueComponent, {\n      width:'500px',\n      data:{scenes: this.modalData, selected: this.selected}\n    });\n  \n  dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log(this.selected)\n      this.getPdf(this.selected, this.script)\n    });\n  } else this.getPdf(this.selected,this.script)\n    \n  }\n\n}\n\n\n\n","<div class=\"main-container\">\n  <!-- hidden buttons for development -->\n<!-- <button (click)=\"logSelected()\">log</button>\n<button (click)=\"makePages(selected)\">make pages</button> -->\n    <div class=\"controls-container\">\n       <h1> Project: {{script}}</h1>\n        <h2>{{date | date: 'shortDate' }} scenes:</h2>\n        <ul>\n            <li *ngFor =\"let scene of selected\"><pre>{{scene.sceneNumber}}     {{scene.text}}     {{scene.sceneNumber}}</pre></li>\n            \n        </ul>\n    \n        <div>\n        <button (click)=\"openDialog()\">getPDF</button>\n      </div>\n        \n        <mat-form-field style=\"width:100%\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          \n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n          \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Scene Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.sceneNumber}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"page number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Page Number </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\"> {{scene.pageNumber}} </td>\n              </ng-container>\n          \n              <!-- Progress Column -->\n              <ng-container matColumnDef=\"text\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.text}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"preview\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Text </th>\n                <td mat-cell *matCellDef=\"let scene\"> {{scene.preview}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Select </th>\n                <td mat-cell *matCellDef=\"let scene; let i=index\">\n                    <input type=\"checkbox\" \n                    name ={{i+1}}\n               \n                    (change)=\"toggleSelected($event, scene)\" \n                    [attr.disabled] = \"active === false ? 'disabled' : null\"> </td>\n              </ng-container>\n          \n          \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          \n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n              </tr>\n            </table>\n          \n            <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\n          </div>\n  \n       \n\n    </div>\n\n</div>","import { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UploadService } from './../upload.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  $download:Observable<any>\n  constructor(public upload:UploadService, public router:Router) { }\n  file:string\n  data:any;\n  ngOnInit(): void {\n    this.file = localStorage.getItem(\"name\")\n    \n \n}\n  getSheet(){\n  \n  this.upload.getFile(this.file).subscribe(data =>{ \n\n    var url = window.URL.createObjectURL(data);\n        window.open(url);\n    this.router.navigate([\"\"])\n        }\n  )\n}\n      \n}\n\n\n","<div class=\"main\" >\n<div class=\"button-container\">\n  <!-- engage this to download data for watson. -->\n  <!-- <h1>Processing complete on :</h1>\n  <h3>{{file}}</h3>\n<button mat-button color=\"accent\" class=\"success\"(click)=\"getSheet()\">download spreadsheet</button>\n  </div> -->\n  <app-dashboard-left></app-dashboard-left>\n  <app-dashboard-right\n  ></app-dashboard-right>\n</div>\n","import { text } from 'body-parser/lib/types/text';\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\nexport class IssueComponent implements OnInit, AfterViewInit {\nscriptData: any[];\nproblems:any[];\nselected:any[];\nmodalProblems:any[]=[];\ncurrentProblem:any;\nproblemIndex:number=0\nlineInQuestion:string;\nmodalReady:boolean = false\n  constructor(public  upload:UploadService,     \n    public dialogRef: MatDialogRef<IssueComponent>,  \n    @Inject(MAT_DIALOG_DATA) public data:any) { }\n\n  ngOnInit(): void {\n    \n  }\n  ngAfterViewInit(): void {\n    \n    console.log(\"after firiing\")\n    this.scriptData = this.upload.lineArr\n    console.log(this.data)\n    this.problems = this.data.scenes\n    this.selected =this.data.selected\n    this.getProblems()\n    this.updateProblem()\n    console.log(this.currentProblem)\n    console.log(this.problems)\n    console.log(this.selected)\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    \n  }\n  getProblems(){\n    for(let i = 0; i < this.selected.length; i++){\n      let scenes = this.problems.filter(scene => scene.sceneNumber === this.selected[i].sceneIndex+1)\n       console.log(scenes)\n       scenes.forEach(scene =>{\n       scene.lineCSS =[];\n        for(let i = 0 ; i <scene.text.length; i++){\n           scene.lineCSS.push(this.scriptData[scene.lastCharIndex+i].category)\n        }\n       })\n       this.modalProblems.push(scenes)\n    }\n    this.modalProblems = this.modalProblems.flat()\n    this.modalReady=true\n    console.log(this.modalProblems)\n  }\n  updateProblem(){\n    this.currentProblem = this.modalProblems[this.problemIndex];\n    this.currentProblem.modalText= [];\n    for(let i=0;i<this.currentProblem.lineCSS.length;i++){\n   \n      this.currentProblem.modalText.push({\n        text:this.currentProblem.text[i],\n        css:this.currentProblem.lineCSS[i]\n      })\n   }\n   this.currentProblem.finalText ={\n    css:this.currentProblem.modalText[this.currentProblem.modalText.length-1].css + \" last-line\",\n    text:this.currentProblem.modalText[this.currentProblem.modalText.length-1].text\n   }\n\n  this.currentProblem.modalText.pop()\n    \n    console.log(this.currentProblem)\n  }\n  iterateProblem(){\n    console.log(this.problemIndex, this.modalProblems.length)\n    if(this.problemIndex+1 < this.modalProblems.length){\n    this.problemIndex+=1;\n    this.updateProblem()\n    }else \n    this.dialogRef.close()\n  }\n  updateScriptDoc(index, str){\n   \n    this.upload.lineArr[index].category=str;\n    this.iterateProblem()\n  }\n  getClass(str){\n    return str\n}\n\n}\n","<div>\n    <ul *ngIf=\"modalReady\">\n        <h1>Lend us a hand!</h1>\n        <h3>Our AI is still learning how to read scripts and it looks like we ran into a few issues</h3>\n       <div class=\"screenbox\">\n        <li *ngFor=\"let line of currentProblem.modalText; \"> \n           <div [ngClass]=\"getClass(line.css)\">{{line.text}}</div> \n        </li>\n        <li>\n            <div class={{currentProblem.finalText.css}}> {{currentProblem.finalText.text}}</div>\n        </li>\n    </div>\n    <div>Is the line in red DESCRIPTION or SOMETHING ELSE</div>\n    <div class=\"button-container\">\n       \n        <div>\n            <button (click)=\"updateScriptDoc(currentProblem.index,'dialog')\">something else</button>\n        </div>\n        <div>\n            <button (click)=\"updateScriptDoc(currentProblem.index,'first-description')\">description</button>\n        </div>\n    </div>\n    </ul>\n\n</div>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Profile - we're working on it</a>\n      <a mat-list-item href=\"#\">Upolad - coming soon</a>\n      <a mat-list-item href=\"#\">Pricing - also on the way</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Welcome to CheapSide</span>\n    </mat-toolbar>\n   <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-script',\n  templateUrl: './script.component.html',\n  styleUrls: ['./script.component.css']\n})\nexport class ScriptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>script works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\"\nimport { catchError, map } from 'rxjs/operators';  \nimport { HttpClientModule, HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\"\nimport { response } from 'express';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  script: string \n   httpOptions = {\n  headers:null,\n  params:null,\n  responseType:null \n  };\n  lineArr: any;\n  pagesArr:any;\n  issues:any;\n//   THIS NEEDS TO BE UN COMMENTED AND ADDED BEFORE ALL THE URL TARGETS IN THE GET METHODS\n  url: string = \"https://sides3.herokuapp.com\"\n\n \n  constructor(public httpClient:HttpClient) { }\n  getPDF(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers=new Headers();\n    this.httpOptions.responseType = \"blob\"\n    return this.httpClient.get( this.url+\"/complete\", {responseType:\"blob\", params:{name:this.script}})\n}\n  getFile(name){\n    let params = new HttpParams();\n    params.append(\"name\", name)\n    this.httpOptions.params = params\n    this.httpOptions.headers =new Headers();\n    this.httpOptions.responseType = \"blob\"\n\n    // console.log(name)\n    // headers.append('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    return this.httpClient.get(this.url+ '/download', {responseType: \"blob\", params:{name:this.script}})\n  } \nresetHttpOptions(){\n    this.httpOptions = {\n      headers:\"\",\n      params:null,\n      responseType:null\n    }\n  }\n  // get classified data \npostFile(fileToUpload: File): Observable<any> {\n \n  this.resetHttpOptions()\n  this.script = localStorage.getItem('name')\n  const endpoint ='/api';\n    const formData: FormData = new FormData();\n    formData.append('script', fileToUpload, fileToUpload.name);\n    return this.httpClient\n      .post(this.url+\"/api\", formData, this.httpOptions )\n      .pipe(map\n        (data =>{\n          return data\n        }))}\n        \n  generatePdf(sceneArr, name){\n  console.log(\"calling generatePDF\")\n  sceneArr.push(name)\n// change this to just refrence the page breaks and then add x out to all other lines\n\n  // let document= []\n  // document.push(name)\n  // sceneArr.forEach(pageArr => {\n  //   for (let i = 0; i < pageArr.length-1; i++){\n  //     document.push(this.lineArr[pageArr[i].index])\n  // }\n  // })\n console.log(sceneArr)\n  return  this.httpClient.post(this.url+\"/pdf\", sceneArr)\n}\n\n}\n\n  \n\n\n","import { Observable, Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit, OnDestroy {\n  fileToUpload: File\n  dataSubscription: Subscription\n  constructor(public upload:UploadService, public router:Router) { }\n  lines:any[]\n  $script_data:Observable<any>\n  ngOnInit(): void {\n\n    this.upload.lineArr = [];\n\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n\n    this.dataSubscription.unsubscribe()\n\n }\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n    localStorage.setItem('name', this.fileToUpload.name.replace(/.pdf/, \"\"))\n    this.$script_data = this.upload.postFile(this.fileToUpload)\n    this.dataSubscription = this.$script_data.subscribe(data=>{\n      console.log(data)\n      this.lines = data[0]\n      this.upload.lineArr = data[0]\n      this.upload.issues = data[1]\n      this.router.navigate([\"download\"])\n\n    })\n    \n \n\n    \n\n}\n  \n}\n","<div class=\"form-group center\">\n  <div>\n    <h3>Our AI saves your crew's time.</h3>\n\n    <h4>Give us a script - we'll give you your scenes.</h4>\n    <h4>We crawl your script and line out all the stuff you dont need so your PA's and AD's can get to real work</h4>\n    <h4>All for a buck.</h4>\n  </div>\n  <div class=\"three-column center\">\n\n    <h4>Your script is SAFE with us.</h4>\n    <h4>Our software NEVER saves your pages</h4>\n    <h4>We're backed by <a style=\"color:red\" href=\"https://www.heroku.com/policy/security\">Heroku</a> your script is in\n      good hands</h4>\n  </div>\n  <div class='center'>\n    <label for=\"file\">Upload your script</label>\n    <div>\n      <input name=\"script\" enctype=\"multipart/form-data\" type=\"file\" id=\"script\"\n        (change)=\"handleFileInput($event.target.files)\">\n    </div>\n  </div>\n</div>\n<div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}